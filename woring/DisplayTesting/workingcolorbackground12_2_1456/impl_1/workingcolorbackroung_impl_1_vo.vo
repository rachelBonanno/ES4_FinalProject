
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.1.0.43.3

// backanno -o workingcolorbackroung_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui workingcolorbackroung_impl_1.udb 
// Netlist created on Sat Dec  2 14:27:17 2023
// Netlist written on Sat Dec  2 14:27:20 2023
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module Top ( rgb_output, vsync_output, hsync_output, output_pll_core, input_P );
  input  input_P;
  output [5:0] rgb_output;
  output vsync_output, hsync_output, output_pll_core;
  wire   \vga_test.row_output_9__N_1[0] , \vga_test.n844 , \vga_test.n10 , 
         \rgb_output_pad[3].vcc , \vga_test.col_output_0__N_47 , 
         \vga_test.row_output_1__N_27 , output_pll_global, \vga_test.n436 , 
         \vga_test.row_output_9__N_1[9] , \vga_test.n880 , \vga_test.n444 , 
         \vga_test.row_output[9] , \vga_test.col_output_9__N_28[2] , 
         \vga_test.col_output_9__N_28[1] , \vga_test.n865 , 
         \vga_test.col_output[2] , \vga_test.n425 , \vga_test.col_output[1] , 
         \vga_test.n427 , \vga_test.row_output_9__N_1[8] , 
         \vga_test.row_output_9__N_1[7] , \vga_test.n862 , 
         \vga_test.row_output[8] , \vga_test.n442 , \vga_test.row_output[7] , 
         \vga_test.row_output_9__N_1[6] , \vga_test.row_output_9__N_1[5] , 
         \vga_test.n859 , \vga_test.row_output[6] , \vga_test.n440 , 
         \vga_test.row_output[5] , \vga_test.col_output_9__N_28[9] , 
         \vga_test.n877 , \vga_test.n433 , \vga_test.col_output[9] , 
         \vga_test.row_output_9__N_1[4] , \vga_test.row_output_9__N_1[3] , 
         \vga_test.n853 , \vga_test.row_output[4] , \vga_test.n438 , 
         \vga_test.row_output[3] , \vga_test.col_output_9__N_28[0] , 
         \vga_test.n856 , \vga_test.col_output[0] , 
         \vga_test.col_output_9__N_28[8] , \vga_test.col_output_9__N_28[7] , 
         \vga_test.n874 , \vga_test.col_output[8] , \vga_test.n431 , 
         \vga_test.col_output[7] , \vga_test.row_output_9__N_1[2] , 
         \vga_test.row_output_9__N_1[1] , \vga_test.n847 , 
         \vga_test.row_output[2] , \vga_test.row_output[1] , 
         \vga_test.col_output_9__N_28[6] , \vga_test.col_output_9__N_28[5] , 
         \vga_test.n871 , \vga_test.col_output[6] , \vga_test.n429 , 
         \vga_test.col_output[5] , \vga_test.col_output_9__N_28[4] , 
         \vga_test.col_output_9__N_28[3] , \vga_test.n868 , 
         \vga_test.col_output[4] , \vga_test.col_output[3] , \vga_test.n79 , 
         \vga_test.vsync_output_c_N_50 , \vga_test.vsync_output_c_N_49 , 
         vsync_output_c, \vga_test.n12 , \vga_test.n14 , \vga_test.n10_adj_53 , 
         \vga_test.n16 , \vga_test.n17 , \vga_test.rgb_output_0_N_51 , 
         \vga_test.rgb_output_0_N_52 , rgb_output_0, 
         \vga_test.hsync_output_c_N_48 , hsync_output_c, GND_net, input_c, 
         \pll_test.lscc_pll_inst.feedback_w , output_pll_core_c;

  vga_test_SLICE_0 \vga_test.SLICE_0 ( .DI1(\vga_test.row_output_9__N_1[0] ), 
    .D1(\vga_test.n844 ), .C1(\vga_test.n10 ), .B1(\rgb_output_pad[3].vcc ), 
    .CE(\vga_test.col_output_0__N_47 ), .LSR(\vga_test.row_output_1__N_27 ), 
    .CLK(output_pll_global), .CIN1(\vga_test.n844 ), .Q1(\vga_test.n10 ), 
    .F1(\vga_test.row_output_9__N_1[0] ), .COUT1(\vga_test.n436 ), 
    .COUT0(\vga_test.n844 ));
  vga_test_SLICE_1 \vga_test.SLICE_1 ( .DI0(\vga_test.row_output_9__N_1[9] ), 
    .D1(\vga_test.n880 ), .D0(\vga_test.n444 ), .C0(\vga_test.row_output[9] ), 
    .CE(\vga_test.col_output_0__N_47 ), .LSR(\vga_test.row_output_1__N_27 ), 
    .CLK(output_pll_global), .CIN0(\vga_test.n444 ), .CIN1(\vga_test.n880 ), 
    .Q0(\vga_test.row_output[9] ), .F0(\vga_test.row_output_9__N_1[9] ), 
    .COUT0(\vga_test.n880 ));
  vga_test_SLICE_2 \vga_test.SLICE_2 ( .DI1(\vga_test.col_output_9__N_28[2] ), 
    .DI0(\vga_test.col_output_9__N_28[1] ), .D1(\vga_test.n865 ), 
    .C1(\vga_test.col_output[2] ), .D0(\vga_test.n425 ), 
    .C0(\vga_test.col_output[1] ), .LSR(\vga_test.col_output_0__N_47 ), 
    .CLK(output_pll_global), .CIN0(\vga_test.n425 ), .CIN1(\vga_test.n865 ), 
    .Q0(\vga_test.col_output[1] ), .Q1(\vga_test.col_output[2] ), 
    .F0(\vga_test.col_output_9__N_28[1] ), 
    .F1(\vga_test.col_output_9__N_28[2] ), .COUT1(\vga_test.n427 ), 
    .COUT0(\vga_test.n865 ));
  vga_test_SLICE_3 \vga_test.SLICE_3 ( .DI1(\vga_test.row_output_9__N_1[8] ), 
    .DI0(\vga_test.row_output_9__N_1[7] ), .D1(\vga_test.n862 ), 
    .C1(\vga_test.row_output[8] ), .D0(\vga_test.n442 ), 
    .C0(\vga_test.row_output[7] ), .CE(\vga_test.col_output_0__N_47 ), 
    .LSR(\vga_test.row_output_1__N_27 ), .CLK(output_pll_global), 
    .CIN0(\vga_test.n442 ), .CIN1(\vga_test.n862 ), 
    .Q0(\vga_test.row_output[7] ), .Q1(\vga_test.row_output[8] ), 
    .F0(\vga_test.row_output_9__N_1[7] ), .F1(\vga_test.row_output_9__N_1[8] ), 
    .COUT1(\vga_test.n444 ), .COUT0(\vga_test.n862 ));
  vga_test_SLICE_4 \vga_test.SLICE_4 ( .DI1(\vga_test.row_output_9__N_1[6] ), 
    .DI0(\vga_test.row_output_9__N_1[5] ), .D1(\vga_test.n859 ), 
    .C1(\vga_test.row_output[6] ), .D0(\vga_test.n440 ), 
    .C0(\vga_test.row_output[5] ), .CE(\vga_test.col_output_0__N_47 ), 
    .LSR(\vga_test.row_output_1__N_27 ), .CLK(output_pll_global), 
    .CIN0(\vga_test.n440 ), .CIN1(\vga_test.n859 ), 
    .Q0(\vga_test.row_output[5] ), .Q1(\vga_test.row_output[6] ), 
    .F0(\vga_test.row_output_9__N_1[5] ), .F1(\vga_test.row_output_9__N_1[6] ), 
    .COUT1(\vga_test.n442 ), .COUT0(\vga_test.n859 ));
  vga_test_SLICE_5 \vga_test.SLICE_5 ( .DI0(\vga_test.col_output_9__N_28[9] ), 
    .D1(\vga_test.n877 ), .D0(\vga_test.n433 ), .C0(\vga_test.col_output[9] ), 
    .LSR(\vga_test.col_output_0__N_47 ), .CLK(output_pll_global), 
    .CIN0(\vga_test.n433 ), .CIN1(\vga_test.n877 ), 
    .Q0(\vga_test.col_output[9] ), .F0(\vga_test.col_output_9__N_28[9] ), 
    .COUT0(\vga_test.n877 ));
  vga_test_SLICE_6 \vga_test.SLICE_6 ( .DI1(\vga_test.row_output_9__N_1[4] ), 
    .DI0(\vga_test.row_output_9__N_1[3] ), .D1(\vga_test.n853 ), 
    .C1(\vga_test.row_output[4] ), .D0(\vga_test.n438 ), 
    .C0(\vga_test.row_output[3] ), .CE(\vga_test.col_output_0__N_47 ), 
    .LSR(\vga_test.row_output_1__N_27 ), .CLK(output_pll_global), 
    .CIN0(\vga_test.n438 ), .CIN1(\vga_test.n853 ), 
    .Q0(\vga_test.row_output[3] ), .Q1(\vga_test.row_output[4] ), 
    .F0(\vga_test.row_output_9__N_1[3] ), .F1(\vga_test.row_output_9__N_1[4] ), 
    .COUT1(\vga_test.n440 ), .COUT0(\vga_test.n853 ));
  vga_test_SLICE_7 \vga_test.SLICE_7 ( .DI1(\vga_test.col_output_9__N_28[0] ), 
    .D1(\vga_test.n856 ), .C1(\vga_test.col_output[0] ), 
    .B1(\rgb_output_pad[3].vcc ), .LSR(\vga_test.col_output_0__N_47 ), 
    .CLK(output_pll_global), .CIN1(\vga_test.n856 ), 
    .Q1(\vga_test.col_output[0] ), .F1(\vga_test.col_output_9__N_28[0] ), 
    .COUT1(\vga_test.n425 ), .COUT0(\vga_test.n856 ));
  vga_test_SLICE_8 \vga_test.SLICE_8 ( .DI1(\vga_test.col_output_9__N_28[8] ), 
    .DI0(\vga_test.col_output_9__N_28[7] ), .D1(\vga_test.n874 ), 
    .C1(\vga_test.col_output[8] ), .D0(\vga_test.n431 ), 
    .C0(\vga_test.col_output[7] ), .LSR(\vga_test.col_output_0__N_47 ), 
    .CLK(output_pll_global), .CIN0(\vga_test.n431 ), .CIN1(\vga_test.n874 ), 
    .Q0(\vga_test.col_output[7] ), .Q1(\vga_test.col_output[8] ), 
    .F0(\vga_test.col_output_9__N_28[7] ), 
    .F1(\vga_test.col_output_9__N_28[8] ), .COUT1(\vga_test.n433 ), 
    .COUT0(\vga_test.n874 ));
  vga_test_SLICE_9 \vga_test.SLICE_9 ( .DI1(\vga_test.row_output_9__N_1[2] ), 
    .DI0(\vga_test.row_output_9__N_1[1] ), .D1(\vga_test.n847 ), 
    .C1(\vga_test.row_output[2] ), .D0(\vga_test.n436 ), 
    .C0(\vga_test.row_output[1] ), .CE(\vga_test.col_output_0__N_47 ), 
    .LSR(\vga_test.row_output_1__N_27 ), .CLK(output_pll_global), 
    .CIN0(\vga_test.n436 ), .CIN1(\vga_test.n847 ), 
    .Q0(\vga_test.row_output[1] ), .Q1(\vga_test.row_output[2] ), 
    .F0(\vga_test.row_output_9__N_1[1] ), .F1(\vga_test.row_output_9__N_1[2] ), 
    .COUT1(\vga_test.n438 ), .COUT0(\vga_test.n847 ));
  vga_test_SLICE_10 \vga_test.SLICE_10 ( 
    .DI1(\vga_test.col_output_9__N_28[6] ), 
    .DI0(\vga_test.col_output_9__N_28[5] ), .D1(\vga_test.n871 ), 
    .C1(\vga_test.col_output[6] ), .D0(\vga_test.n429 ), 
    .C0(\vga_test.col_output[5] ), .LSR(\vga_test.col_output_0__N_47 ), 
    .CLK(output_pll_global), .CIN0(\vga_test.n429 ), .CIN1(\vga_test.n871 ), 
    .Q0(\vga_test.col_output[5] ), .Q1(\vga_test.col_output[6] ), 
    .F0(\vga_test.col_output_9__N_28[5] ), 
    .F1(\vga_test.col_output_9__N_28[6] ), .COUT1(\vga_test.n431 ), 
    .COUT0(\vga_test.n871 ));
  vga_test_SLICE_11 \vga_test.SLICE_11 ( 
    .DI1(\vga_test.col_output_9__N_28[4] ), 
    .DI0(\vga_test.col_output_9__N_28[3] ), .D1(\vga_test.n868 ), 
    .C1(\vga_test.col_output[4] ), .D0(\vga_test.n427 ), 
    .C0(\vga_test.col_output[3] ), .LSR(\vga_test.col_output_0__N_47 ), 
    .CLK(output_pll_global), .CIN0(\vga_test.n427 ), .CIN1(\vga_test.n868 ), 
    .Q0(\vga_test.col_output[3] ), .Q1(\vga_test.col_output[4] ), 
    .F0(\vga_test.col_output_9__N_28[3] ), 
    .F1(\vga_test.col_output_9__N_28[4] ), .COUT1(\vga_test.n429 ), 
    .COUT0(\vga_test.n868 ));
  vga_test_SLICE_12 \vga_test.SLICE_12 ( .D1(\vga_test.row_output[6] ), 
    .C1(\vga_test.n79 ), .B1(\vga_test.row_output[5] ), 
    .A1(\vga_test.row_output[3] ), .D0(\vga_test.row_output[7] ), 
    .C0(\vga_test.row_output[8] ), .F0(\vga_test.n79 ), 
    .F1(\vga_test.vsync_output_c_N_50 ));
  vga_test_SLICE_14 \vga_test.SLICE_14 ( .D1(\vga_test.row_output[4] ), 
    .C1(\vga_test.vsync_output_c_N_49 ), .B1(\vga_test.vsync_output_c_N_50 ), 
    .A1(\vga_test.row_output[1] ), .D0(\vga_test.row_output[9] ), 
    .C0(\vga_test.row_output[2] ), .F0(\vga_test.vsync_output_c_N_49 ), 
    .F1(vsync_output_c));
  vga_test_SLICE_16 \vga_test.SLICE_16 ( .D1(\vga_test.row_output[4] ), 
    .C1(\vga_test.n12 ), .B1(\vga_test.row_output[1] ), 
    .A1(\vga_test.row_output[5] ), .D0(\vga_test.row_output[8] ), 
    .C0(\vga_test.row_output[7] ), .B0(\vga_test.row_output[2] ), 
    .F0(\vga_test.n12 ), .F1(\vga_test.n14 ));
  vga_test_SLICE_18 \vga_test.SLICE_18 ( .D1(\vga_test.n14 ), 
    .C1(\vga_test.n10_adj_53 ), .B1(\vga_test.col_output_0__N_47 ), 
    .A1(\vga_test.row_output[3] ), .D0(\vga_test.row_output[9] ), 
    .C0(\vga_test.n10 ), .B0(\vga_test.row_output[6] ), 
    .F0(\vga_test.n10_adj_53 ), .F1(\vga_test.row_output_1__N_27 ));
  vga_test_SLICE_20 \vga_test.SLICE_20 ( .D0(\vga_test.col_output[2] ), 
    .C0(\vga_test.col_output[9] ), .B0(\vga_test.col_output[7] ), 
    .A0(\vga_test.col_output[0] ), .F0(\vga_test.n16 ));
  vga_test_SLICE_21 \vga_test.SLICE_21 ( .D1(\vga_test.col_output[4] ), 
    .C1(\vga_test.n17 ), .B1(\vga_test.col_output[1] ), .A1(\vga_test.n16 ), 
    .D0(\vga_test.col_output[5] ), .C0(\vga_test.col_output[3] ), 
    .B0(\vga_test.col_output[8] ), .A0(\vga_test.col_output[6] ), 
    .F0(\vga_test.n17 ), .F1(\vga_test.col_output_0__N_47 ));
  vga_test_SLICE_22 \vga_test.SLICE_22 ( .D1(\vga_test.row_output[6] ), 
    .C1(\vga_test.rgb_output_0_N_51 ), .B1(\vga_test.row_output[9] ), 
    .A1(\vga_test.rgb_output_0_N_52 ), .D0(\vga_test.col_output[9] ), 
    .C0(\vga_test.col_output[7] ), .B0(\vga_test.col_output[8] ), 
    .F0(\vga_test.rgb_output_0_N_51 ), .F1(rgb_output_0));
  vga_test_SLICE_24 \vga_test.SLICE_24 ( .D1(\vga_test.col_output[9] ), 
    .C1(\vga_test.hsync_output_c_N_48 ), .B1(\vga_test.col_output[7] ), 
    .A1(\vga_test.col_output[8] ), .D0(\vga_test.col_output[5] ), 
    .C0(\vga_test.col_output[4] ), .A0(\vga_test.col_output[6] ), 
    .F0(\vga_test.hsync_output_c_N_48 ), .F1(hsync_output_c));
  SLICE_26 SLICE_26( .F0(GND_net));
  vga_test_SLICE_28 \vga_test.SLICE_28 ( .D0(\vga_test.row_output[5] ), 
    .C0(\vga_test.row_output[7] ), .B0(\vga_test.row_output[8] ), 
    .F0(\vga_test.rgb_output_0_N_52 ));
  rgb_output_pad_3__SLICE_29 \rgb_output_pad[3].SLICE_29 ( 
    .F0(\rgb_output_pad[3].vcc ));
  pll_test_lscc_pll_inst_u_PLL_B \pll_test.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(input_c), .FEEDBACK(\pll_test.lscc_pll_inst.feedback_w ), 
    .RESET_N(\rgb_output_pad[3].vcc ), 
    .INTFBOUT(\pll_test.lscc_pll_inst.feedback_w ), 
    .OUTCORE(output_pll_core_c), .OUTGLOBAL(output_pll_global));
  rgb_output_3_ \rgb_output[3]_I ( .PADDO(rgb_output_0), 
    .rgboutput3(rgb_output[3]));
  rgb_output_4_ \rgb_output[4]_I ( .PADDO(rgb_output_0), 
    .rgboutput4(rgb_output[4]));
  rgb_output_5_ \rgb_output[5]_I ( .PADDO(rgb_output_0), 
    .rgboutput5(rgb_output[5]));
  vsync_output vsync_output_I( .PADDO(vsync_output_c), 
    .vsync_output(vsync_output));
  hsync_output hsync_output_I( .PADDO(hsync_output_c), 
    .hsync_output(hsync_output));
  output_pll_core output_pll_core_I( .PADDO(output_pll_core_c), 
    .output_pll_core(output_pll_core));
  rgb_output_2_ \rgb_output[2]_I ( .PADDO(rgb_output_0), 
    .rgboutput2(rgb_output[2]));
  rgb_output_1_ \rgb_output[1]_I ( .PADDO(GND_net), .rgboutput1(rgb_output[1]));
  rgb_output_0_ \rgb_output[0]_I ( .PADDO(GND_net), .rgboutput0(rgb_output[0]));
  input_B input_I( .PADDI(input_c), .input_P(input_S));
endmodule

module vga_test_SLICE_0 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \vga_test/counter_row_17_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_test/counter_row_17__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vga_test_SLICE_1 ( input DI0, D1, D0, C0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \vga_test/counter_row_17_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_test/row_output_9__I_0_2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_test_SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_test/counter_col_18_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_test/col_output_9__I_16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_test/col_output_9__I_15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_test_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_test/counter_row_17_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_test/row_output_9__I_2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_test/row_output_9__I_1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_test_SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_test/counter_row_17_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_test/row_output_9__I_4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_test/row_output_9__I_3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_test_SLICE_5 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \vga_test/counter_col_18_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_test/col_output_9__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_test_SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_test/counter_row_17_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_test/row_output_9__I_6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_test/row_output_9__I_5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_test_SLICE_7 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \vga_test/counter_col_18_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_test/col_output_9__I_17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_test_SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_test/counter_col_18_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_test/col_output_9__I_10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_test/col_output_9__I_9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_test_SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_test/counter_row_17_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_test/row_output_9__I_8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_test/row_output_9__I_7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_test_SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_test/counter_col_18_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_test/col_output_9__I_12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_test/col_output_9__I_11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_test_SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_test/counter_col_18_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_test/col_output_9__I_14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_test/col_output_9__I_13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_test_SLICE_12 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut4 \vga_test/i474_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40001 \vga_test/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_test_SLICE_14 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40002 \vga_test/vsync_output_c_I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40003 \vga_test/i2_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_test_SLICE_16 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40004 \vga_test/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 \vga_test/i4_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0x000C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_test_SLICE_18 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40006 \vga_test/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 \vga_test/i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_test_SLICE_20 ( input D0, C0, B0, A0, output F0 );

  lut40008 \vga_test/i6_4_lut_adj_18 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x2000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_test_SLICE_21 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40009 \vga_test/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 \vga_test/i7_4_lut_adj_19 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_test_SLICE_22 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40011 \vga_test/row_output_9__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40012 \vga_test/i88_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x0103") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xFC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_test_SLICE_24 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40013 \vga_test/col_output_8__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40014 \vga_test/i34_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xBFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x5FFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_26 ( output F0 );
  wire   GNDI;

  lut40015 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_test_SLICE_28 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40016 \vga_test/i1_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rgb_output_pad_3__SLICE_29 ( output F0 );
  wire   GNDI;

  lut40017 \rgb_output_pad[3].vhi_inst ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module pll_test_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTCORE, OUTGLOBAL );
  wire   GNDI;

  PLL_B_B \pll_test/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTCORE) = (0:0:0,0:0:0);
    (REFERENCECLK => OUTGLOBAL) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.DIVR = "0";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module rgb_output_3_ ( input PADDO, output rgboutput3 );
  wire   VCCI;

  BB_B_B \rgb_output_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(rgboutput3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgboutput3) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module rgb_output_4_ ( input PADDO, output rgboutput4 );
  wire   VCCI;

  BB_B_B \rgb_output_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(rgboutput4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgboutput4) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_output_5_ ( input PADDO, output rgboutput5 );
  wire   VCCI;

  BB_B_B \rgb_output_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(rgboutput5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgboutput5) = (0:0:0,0:0:0);
  endspecify

endmodule

module vsync_output ( input PADDO, output vsync_output );
  wire   VCCI;

  BB_B_B \vsync_output_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(vsync_output));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => vsync_output) = (0:0:0,0:0:0);
  endspecify

endmodule

module hsync_output ( input PADDO, output hsync_output );
  wire   VCCI;

  BB_B_B \hsync_output_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(hsync_output));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => hsync_output) = (0:0:0,0:0:0);
  endspecify

endmodule

module output_pll_core ( input PADDO, output output_pll_core );
  wire   VCCI;

  BB_B_B \output_pll_core_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(output_pll_core));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => output_pll_core) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_output_2_ ( input PADDO, output rgboutput2 );
  wire   VCCI;

  BB_B_B \rgb_output_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(rgboutput2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgboutput2) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_output_1_ ( input PADDO, output rgboutput1 );
  wire   VCCI;

  BB_B_B \rgb_output_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(rgboutput1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgboutput1) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_output_0_ ( input PADDO, output rgboutput0 );
  wire   VCCI;

  BB_B_B \rgb_output_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(rgboutput0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgboutput0) = (0:0:0,0:0:0);
  endspecify

endmodule

module input_B ( output PADDI, input input_P );
  wire   GNDI;

  BB_B_B \input_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(input_P));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (input_P => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule
