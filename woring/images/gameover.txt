when "00000000010" => rgb <= "001011";
when "00000000011" => rgb <= "001011";
when "00000000100" => rgb <= "001011";
when "00000000101" => rgb <= "001011";
when "00000000110" => rgb <= "001011";
when "00000000111" => rgb <= "001011";
when "00000001000" => rgb <= "111111";
when "00000001010" => rgb <= "001011";
when "00000001011" => rgb <= "001011";
when "00000001100" => rgb <= "001011";
when "00000001101" => rgb <= "001011";
when "00000001110" => rgb <= "001011";
when "00000001111" => rgb <= "001011";
when "00000010000" => rgb <= "111111";
when "00000010010" => rgb <= "001011";
when "00000010011" => rgb <= "001011";
when "00000010100" => rgb <= "001011";
when "00000010101" => rgb <= "001011";
when "00000010110" => rgb <= "001011";
when "00000010111" => rgb <= "001011";
when "00000011000" => rgb <= "001011";
when "00000011001" => rgb <= "001011";
when "00000011010" => rgb <= "001011";
when "00000011011" => rgb <= "001011";
when "00000011100" => rgb <= "111111";
when "00000011110" => rgb <= "001011";
when "00000011111" => rgb <= "001011";
when "00000100000" => rgb <= "001011";
when "00000100001" => rgb <= "001011";
when "00000100010" => rgb <= "001011";
when "00000100011" => rgb <= "001011";
when "00000100100" => rgb <= "111111";
when "00001000010" => rgb <= "001011";
when "00001000011" => rgb <= "001011";
when "00001000100" => rgb <= "001011";
when "00001000101" => rgb <= "001011";
when "00001000110" => rgb <= "001011";
when "00001000111" => rgb <= "001011";
when "00001001000" => rgb <= "111111";
when "00001001010" => rgb <= "001011";
when "00001001011" => rgb <= "001011";
when "00001001100" => rgb <= "001011";
when "00001001101" => rgb <= "001011";
when "00001001110" => rgb <= "001011";
when "00001001111" => rgb <= "001011";
when "00001010000" => rgb <= "111111";
when "00001010010" => rgb <= "001011";
when "00001010011" => rgb <= "001011";
when "00001010100" => rgb <= "001011";
when "00001010101" => rgb <= "001011";
when "00001010110" => rgb <= "001011";
when "00001010111" => rgb <= "001011";
when "00001011000" => rgb <= "001011";
when "00001011001" => rgb <= "001011";
when "00001011010" => rgb <= "001011";
when "00001011011" => rgb <= "001011";
when "00001011100" => rgb <= "111111";
when "00001011110" => rgb <= "001011";
when "00001011111" => rgb <= "001011";
when "00001100000" => rgb <= "001011";
when "00001100001" => rgb <= "001011";
when "00001100010" => rgb <= "001011";
when "00001100011" => rgb <= "001011";
when "00001100100" => rgb <= "111111";
when "00010000000" => rgb <= "001011";
when "00010000001" => rgb <= "001011";
when "00010000010" => rgb <= "111111";
when "00010001010" => rgb <= "001011";
when "00010001011" => rgb <= "001011";
when "00010001100" => rgb <= "111111";
when "00010001110" => rgb <= "001011";
when "00010001111" => rgb <= "001011";
when "00010010000" => rgb <= "111111";
when "00010010010" => rgb <= "001011";
when "00010010011" => rgb <= "001011";
when "00010010100" => rgb <= "111111";
when "00010010110" => rgb <= "001011";
when "00010010111" => rgb <= "001011";
when "00010011000" => rgb <= "111111";
when "00010011010" => rgb <= "001011";
when "00010011011" => rgb <= "001011";
when "00010011100" => rgb <= "111111";
when "00010011110" => rgb <= "001011";
when "00010011111" => rgb <= "001011";
when "00010100000" => rgb <= "111111";
when "00011000000" => rgb <= "001011";
when "00011000001" => rgb <= "001011";
when "00011000010" => rgb <= "111111";
when "00011001010" => rgb <= "001011";
when "00011001011" => rgb <= "001011";
when "00011001100" => rgb <= "111111";
when "00011001110" => rgb <= "001011";
when "00011001111" => rgb <= "001011";
when "00011010000" => rgb <= "111111";
when "00011010010" => rgb <= "001011";
when "00011010011" => rgb <= "001011";
when "00011010100" => rgb <= "111111";
when "00011010110" => rgb <= "001011";
when "00011010111" => rgb <= "001011";
when "00011011000" => rgb <= "111111";
when "00011011010" => rgb <= "001011";
when "00011011011" => rgb <= "001011";
when "00011011100" => rgb <= "111111";
when "00011011110" => rgb <= "001011";
when "00011011111" => rgb <= "001011";
when "00011100000" => rgb <= "111111";
when "00100000000" => rgb <= "001011";
when "00100000001" => rgb <= "001011";
when "00100000010" => rgb <= "111111";
when "00100000100" => rgb <= "001011";
when "00100000101" => rgb <= "001011";
when "00100000110" => rgb <= "001011";
when "00100000111" => rgb <= "001011";
when "00100001000" => rgb <= "111111";
when "00100001010" => rgb <= "001011";
when "00100001011" => rgb <= "001011";
when "00100001100" => rgb <= "001011";
when "00100001101" => rgb <= "001011";
when "00100001110" => rgb <= "001011";
when "00100001111" => rgb <= "001011";
when "00100010000" => rgb <= "111111";
when "00100010010" => rgb <= "001011";
when "00100010011" => rgb <= "001011";
when "00100010100" => rgb <= "111111";
when "00100010110" => rgb <= "001011";
when "00100010111" => rgb <= "001011";
when "00100011000" => rgb <= "111111";
when "00100011010" => rgb <= "001011";
when "00100011011" => rgb <= "001011";
when "00100011100" => rgb <= "111111";
when "00100011110" => rgb <= "001011";
when "00100011111" => rgb <= "001011";
when "00100100000" => rgb <= "001011";
when "00100100001" => rgb <= "001011";
when "00100100010" => rgb <= "111111";
when "00101000000" => rgb <= "001011";
when "00101000001" => rgb <= "001011";
when "00101000010" => rgb <= "111111";
when "00101000100" => rgb <= "001011";
when "00101000101" => rgb <= "001011";
when "00101000110" => rgb <= "001011";
when "00101000111" => rgb <= "001011";
when "00101001000" => rgb <= "111111";
when "00101001010" => rgb <= "001011";
when "00101001011" => rgb <= "001011";
when "00101001100" => rgb <= "001011";
when "00101001101" => rgb <= "001011";
when "00101001110" => rgb <= "001011";
when "00101001111" => rgb <= "001011";
when "00101010000" => rgb <= "111111";
when "00101010010" => rgb <= "001011";
when "00101010011" => rgb <= "001011";
when "00101010100" => rgb <= "111111";
when "00101010110" => rgb <= "001011";
when "00101010111" => rgb <= "001011";
when "00101011000" => rgb <= "111111";
when "00101011010" => rgb <= "001011";
when "00101011011" => rgb <= "001011";
when "00101011100" => rgb <= "111111";
when "00101011110" => rgb <= "001011";
when "00101011111" => rgb <= "001011";
when "00101100000" => rgb <= "001011";
when "00101100001" => rgb <= "001011";
when "00101100010" => rgb <= "111111";
when "00110000000" => rgb <= "001011";
when "00110000001" => rgb <= "001011";
when "00110000010" => rgb <= "111111";
when "00110000110" => rgb <= "001011";
when "00110000111" => rgb <= "001011";
when "00110001000" => rgb <= "111111";
when "00110001010" => rgb <= "001011";
when "00110001011" => rgb <= "001011";
when "00110001100" => rgb <= "111111";
when "00110001110" => rgb <= "001011";
when "00110001111" => rgb <= "001011";
when "00110010000" => rgb <= "111111";
when "00110010010" => rgb <= "001011";
when "00110010011" => rgb <= "001011";
when "00110010100" => rgb <= "111111";
when "00110011010" => rgb <= "001011";
when "00110011011" => rgb <= "001011";
when "00110011100" => rgb <= "111111";
when "00110011110" => rgb <= "001011";
when "00110011111" => rgb <= "001011";
when "00110100000" => rgb <= "111111";
when "00111000000" => rgb <= "001011";
when "00111000001" => rgb <= "001011";
when "00111000010" => rgb <= "111111";
when "00111000110" => rgb <= "001011";
when "00111000111" => rgb <= "001011";
when "00111001000" => rgb <= "111111";
when "00111001010" => rgb <= "001011";
when "00111001011" => rgb <= "001011";
when "00111001100" => rgb <= "111111";
when "00111001110" => rgb <= "001011";
when "00111001111" => rgb <= "001011";
when "00111010000" => rgb <= "111111";
when "00111010010" => rgb <= "001011";
when "00111010011" => rgb <= "001011";
when "00111010100" => rgb <= "111111";
when "00111011010" => rgb <= "001011";
when "00111011011" => rgb <= "001011";
when "00111011100" => rgb <= "111111";
when "00111011110" => rgb <= "001011";
when "00111011111" => rgb <= "001011";
when "00111100000" => rgb <= "111111";
when "01000000010" => rgb <= "001011";
when "01000000011" => rgb <= "001011";
when "01000000100" => rgb <= "001011";
when "01000000101" => rgb <= "001011";
when "01000000110" => rgb <= "001011";
when "01000000111" => rgb <= "001011";
when "01000001000" => rgb <= "111111";
when "01000001010" => rgb <= "001011";
when "01000001011" => rgb <= "001011";
when "01000001100" => rgb <= "111111";
when "01000001110" => rgb <= "001011";
when "01000001111" => rgb <= "001011";
when "01000010000" => rgb <= "111111";
when "01000010010" => rgb <= "001011";
when "01000010011" => rgb <= "001011";
when "01000010100" => rgb <= "111111";
when "01000011010" => rgb <= "001011";
when "01000011011" => rgb <= "001011";
when "01000011100" => rgb <= "111111";
when "01000011110" => rgb <= "001011";
when "01000011111" => rgb <= "001011";
when "01000100000" => rgb <= "001011";
when "01000100001" => rgb <= "001011";
when "01000100010" => rgb <= "001011";
when "01000100011" => rgb <= "001011";
when "01000100100" => rgb <= "111111";
when "01001000010" => rgb <= "001011";
when "01001000011" => rgb <= "001011";
when "01001000100" => rgb <= "001011";
when "01001000101" => rgb <= "001011";
when "01001000110" => rgb <= "001011";
when "01001000111" => rgb <= "001011";
when "01001001000" => rgb <= "111111";
when "01001001010" => rgb <= "001011";
when "01001001011" => rgb <= "001011";
when "01001001100" => rgb <= "111111";
when "01001001110" => rgb <= "001011";
when "01001001111" => rgb <= "001011";
when "01001010000" => rgb <= "111111";
when "01001010010" => rgb <= "001011";
when "01001010011" => rgb <= "001011";
when "01001010100" => rgb <= "111111";
when "01001011010" => rgb <= "001011";
when "01001011011" => rgb <= "001011";
when "01001011100" => rgb <= "111111";
when "01001011110" => rgb <= "001011";
when "01001011111" => rgb <= "001011";
when "01001100000" => rgb <= "001011";
when "01001100001" => rgb <= "001011";
when "01001100010" => rgb <= "001011";
when "01001100011" => rgb <= "001011";
when "01001100100" => rgb <= "111111";
when "01110000010" => rgb <= "001011";
when "01110000011" => rgb <= "001011";
when "01110000100" => rgb <= "001011";
when "01110000101" => rgb <= "001011";
when "01110000110" => rgb <= "001011";
when "01110000111" => rgb <= "001011";
when "01110001000" => rgb <= "111111";
when "01110001010" => rgb <= "001011";
when "01110001011" => rgb <= "001011";
when "01110001100" => rgb <= "111111";
when "01110010000" => rgb <= "001011";
when "01110010001" => rgb <= "001011";
when "01110010010" => rgb <= "111111";
when "01110010100" => rgb <= "001011";
when "01110010101" => rgb <= "001011";
when "01110010110" => rgb <= "001011";
when "01110010111" => rgb <= "001011";
when "01110011000" => rgb <= "001011";
when "01110011001" => rgb <= "001011";
when "01110011010" => rgb <= "111111";
when "01110011100" => rgb <= "001011";
when "01110011101" => rgb <= "001011";
when "01110011110" => rgb <= "001011";
when "01110011111" => rgb <= "001011";
when "01110100000" => rgb <= "001011";
when "01110100001" => rgb <= "001011";
when "01110100010" => rgb <= "111111";
when "01111000010" => rgb <= "001011";
when "01111000011" => rgb <= "001011";
when "01111000100" => rgb <= "001011";
when "01111000101" => rgb <= "001011";
when "01111000110" => rgb <= "001011";
when "01111000111" => rgb <= "001011";
when "01111001000" => rgb <= "111111";
when "01111001010" => rgb <= "001011";
when "01111001011" => rgb <= "001011";
when "01111001100" => rgb <= "111111";
when "01111010000" => rgb <= "001011";
when "01111010001" => rgb <= "001011";
when "01111010010" => rgb <= "111111";
when "01111010100" => rgb <= "001011";
when "01111010101" => rgb <= "001011";
when "01111010110" => rgb <= "001011";
when "01111010111" => rgb <= "001011";
when "01111011000" => rgb <= "001011";
when "01111011001" => rgb <= "001011";
when "01111011010" => rgb <= "111111";
when "01111011100" => rgb <= "001011";
when "01111011101" => rgb <= "001011";
when "01111011110" => rgb <= "001011";
when "01111011111" => rgb <= "001011";
when "01111100000" => rgb <= "001011";
when "01111100001" => rgb <= "001011";
when "01111100010" => rgb <= "111111";
when "10000000010" => rgb <= "001011";
when "10000000011" => rgb <= "001011";
when "10000000100" => rgb <= "111111";
when "10000000110" => rgb <= "001011";
when "10000000111" => rgb <= "001011";
when "10000001000" => rgb <= "111111";
when "10000001010" => rgb <= "001011";
when "10000001011" => rgb <= "001011";
when "10000001100" => rgb <= "111111";
when "10000010000" => rgb <= "001011";
when "10000010001" => rgb <= "001011";
when "10000010010" => rgb <= "111111";
when "10000010100" => rgb <= "001011";
when "10000010101" => rgb <= "001011";
when "10000010110" => rgb <= "111111";
when "10000011100" => rgb <= "001011";
when "10000011101" => rgb <= "001011";
when "10000011110" => rgb <= "111111";
when "10000100001" => rgb <= "001011";
when "10000100010" => rgb <= "001011";
when "10000100011" => rgb <= "111111";
when "10001000010" => rgb <= "001011";
when "10001000011" => rgb <= "001011";
when "10001000100" => rgb <= "111111";
when "10001000110" => rgb <= "001011";
when "10001000111" => rgb <= "001011";
when "10001001000" => rgb <= "111111";
when "10001001010" => rgb <= "001011";
when "10001001011" => rgb <= "001011";
when "10001001100" => rgb <= "111111";
when "10001010000" => rgb <= "001011";
when "10001010001" => rgb <= "001011";
when "10001010010" => rgb <= "111111";
when "10001010100" => rgb <= "001011";
when "10001010101" => rgb <= "001011";
when "10001010110" => rgb <= "111111";
when "10001011100" => rgb <= "001011";
when "10001011101" => rgb <= "001011";
when "10001011110" => rgb <= "111111";
when "10001100001" => rgb <= "001011";
when "10001100010" => rgb <= "001011";
when "10001100011" => rgb <= "111111";
when "10010000010" => rgb <= "001011";
when "10010000011" => rgb <= "001011";
when "10010000100" => rgb <= "111111";
when "10010000110" => rgb <= "001011";
when "10010000111" => rgb <= "001011";
when "10010001000" => rgb <= "111111";
when "10010001010" => rgb <= "001011";
when "10010001011" => rgb <= "001011";
when "10010001100" => rgb <= "111111";
when "10010010000" => rgb <= "001011";
when "10010010001" => rgb <= "001011";
when "10010010010" => rgb <= "111111";
when "10010010100" => rgb <= "001011";
when "10010010101" => rgb <= "001011";
when "10010010110" => rgb <= "001011";
when "10010010111" => rgb <= "001011";
when "10010011000" => rgb <= "111111";
when "10010011100" => rgb <= "001011";
when "10010011101" => rgb <= "001011";
when "10010011110" => rgb <= "001011";
when "10010011111" => rgb <= "111111";
when "10010100000" => rgb <= "001011";
when "10010100001" => rgb <= "001011";
when "10010100010" => rgb <= "111111";
when "10011000010" => rgb <= "001011";
when "10011000011" => rgb <= "001011";
when "10011000100" => rgb <= "111111";
when "10011000110" => rgb <= "001011";
when "10011000111" => rgb <= "001011";
when "10011001000" => rgb <= "111111";
when "10011001010" => rgb <= "001011";
when "10011001011" => rgb <= "001011";
when "10011001100" => rgb <= "111111";
when "10011010000" => rgb <= "001011";
when "10011010001" => rgb <= "001011";
when "10011010010" => rgb <= "111111";
when "10011010100" => rgb <= "001011";
when "10011010101" => rgb <= "001011";
when "10011010110" => rgb <= "001011";
when "10011010111" => rgb <= "001011";
when "10011011000" => rgb <= "111111";
when "10011011100" => rgb <= "001011";
when "10011011101" => rgb <= "001011";
when "10011011110" => rgb <= "001011";
when "10011011111" => rgb <= "001011";
when "10011100000" => rgb <= "001011";
when "10011100001" => rgb <= "001011";
when "10011100010" => rgb <= "111111";
when "10100000010" => rgb <= "001011";
when "10100000011" => rgb <= "001011";
when "10100000100" => rgb <= "111111";
when "10100000110" => rgb <= "001011";
when "10100000111" => rgb <= "001011";
when "10100001000" => rgb <= "111111";
when "10100001011" => rgb <= "001011";
when "10100001100" => rgb <= "001011";
when "10100001101" => rgb <= "111111";
when "10100001111" => rgb <= "001011";
when "10100010000" => rgb <= "001011";
when "10100010001" => rgb <= "111111";
when "10100010100" => rgb <= "001011";
when "10100010101" => rgb <= "001011";
when "10100010110" => rgb <= "111111";
when "10100011100" => rgb <= "001011";
when "10100011101" => rgb <= "001011";
when "10100011110" => rgb <= "001011";
when "10100011111" => rgb <= "001011";
when "10100100000" => rgb <= "001011";
when "10100100001" => rgb <= "111111";
when "10101000010" => rgb <= "001011";
when "10101000011" => rgb <= "001011";
when "10101000100" => rgb <= "111111";
when "10101000110" => rgb <= "001011";
when "10101000111" => rgb <= "001011";
when "10101001000" => rgb <= "111111";
when "10101001011" => rgb <= "001011";
when "10101001100" => rgb <= "001011";
when "10101001101" => rgb <= "111111";
when "10101001111" => rgb <= "001011";
when "10101010000" => rgb <= "001011";
when "10101010001" => rgb <= "111111";
when "10101010100" => rgb <= "001011";
when "10101010101" => rgb <= "001011";
when "10101010110" => rgb <= "111111";
when "10101011100" => rgb <= "001011";
when "10101011101" => rgb <= "001011";
when "10101011110" => rgb <= "111111";
when "10101011111" => rgb <= "001011";
when "10101100000" => rgb <= "001011";
when "10101100001" => rgb <= "001011";
when "10101100010" => rgb <= "111111";
when "10110000010" => rgb <= "001011";
when "10110000011" => rgb <= "001011";
when "10110000100" => rgb <= "001011";
when "10110000101" => rgb <= "001011";
when "10110000110" => rgb <= "001011";
when "10110000111" => rgb <= "001011";
when "10110001000" => rgb <= "111111";
when "10110001100" => rgb <= "001011";
when "10110001101" => rgb <= "001011";
when "10110001110" => rgb <= "001011";
when "10110001111" => rgb <= "001011";
when "10110010000" => rgb <= "111111";
when "10110010100" => rgb <= "001011";
when "10110010101" => rgb <= "001011";
when "10110010110" => rgb <= "001011";
when "10110010111" => rgb <= "001011";
when "10110011000" => rgb <= "001011";
when "10110011001" => rgb <= "001011";
when "10110011010" => rgb <= "111111";
when "10110011100" => rgb <= "001011";
when "10110011101" => rgb <= "001011";
when "10110011110" => rgb <= "111111";
when "10110100000" => rgb <= "001011";
when "10110100001" => rgb <= "001011";
when "10110100010" => rgb <= "001011";
when "10110100011" => rgb <= "111111";
when "10111000010" => rgb <= "001011";
when "10111000011" => rgb <= "001011";
when "10111000100" => rgb <= "001011";
when "10111000101" => rgb <= "001011";
when "10111000110" => rgb <= "001011";
when "10111000111" => rgb <= "001011";
when "10111001000" => rgb <= "111111";
when "10111001100" => rgb <= "001011";
when "10111001101" => rgb <= "001011";
when "10111001110" => rgb <= "001011";
when "10111001111" => rgb <= "001011";
when "10111010000" => rgb <= "111111";
when "10111010100" => rgb <= "001011";
when "10111010101" => rgb <= "001011";
when "10111010110" => rgb <= "001011";
when "10111010111" => rgb <= "001011";
when "10111011000" => rgb <= "001011";
when "10111011001" => rgb <= "001011";
when "10111011010" => rgb <= "111111";
when "10111011100" => rgb <= "001011";
when "10111011101" => rgb <= "001011";
when "10111011110" => rgb <= "111111";
when "10111100001" => rgb <= "001011";
when "10111100010" => rgb <= "001011";
when "10111100011" => rgb <= "111111";
when others => rgb <= "000000";