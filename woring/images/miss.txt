when "000000000" => rgb <= "001011";
when "000000001" => rgb <= "001011";
when "000000010" => rgb <= "001011";
when "000000011" => rgb <= "001011";
when "000000100" => rgb <= "001011";
when "000000101" => rgb <= "001011";
when "000000110" => rgb <= "001011";
when "000000111" => rgb <= "001011";
when "000001000" => rgb <= "001011";
when "000001001" => rgb <= "001011";
when "000001010" => rgb <= "111111";
when "000001100" => rgb <= "001011";
when "000001101" => rgb <= "001011";
when "000001110" => rgb <= "111111";
when "000010000" => rgb <= "001011";
when "000010001" => rgb <= "001011";
when "000010010" => rgb <= "001011";
when "000010011" => rgb <= "001011";
when "000010100" => rgb <= "001011";
when "000010101" => rgb <= "001011";
when "000010110" => rgb <= "111111";
when "000011000" => rgb <= "001011";
when "000011001" => rgb <= "001011";
when "000011010" => rgb <= "001011";
when "000011011" => rgb <= "001011";
when "000011100" => rgb <= "001011";
when "000011101" => rgb <= "001011";
when "000011110" => rgb <= "111111";
when "000100000" => rgb <= "001011";
when "000100001" => rgb <= "001011";
when "000100010" => rgb <= "001011";
when "000100011" => rgb <= "001011";
when "000100100" => rgb <= "001011";
when "000100101" => rgb <= "001011";
when "000100110" => rgb <= "001011";
when "000100111" => rgb <= "001011";
when "000101000" => rgb <= "001011";
when "000101001" => rgb <= "001011";
when "000101010" => rgb <= "111111";
when "000101100" => rgb <= "001011";
when "000101101" => rgb <= "001011";
when "000101110" => rgb <= "111111";
when "000110000" => rgb <= "001011";
when "000110001" => rgb <= "001011";
when "000110010" => rgb <= "001011";
when "000110011" => rgb <= "001011";
when "000110100" => rgb <= "001011";
when "000110101" => rgb <= "001011";
when "000110110" => rgb <= "111111";
when "000111000" => rgb <= "001011";
when "000111001" => rgb <= "001011";
when "000111010" => rgb <= "001011";
when "000111011" => rgb <= "001011";
when "000111100" => rgb <= "001011";
when "000111101" => rgb <= "001011";
when "000111110" => rgb <= "111111";
when "001000000" => rgb <= "001011";
when "001000001" => rgb <= "001011";
when "001000010" => rgb <= "111111";
when "001000100" => rgb <= "001011";
when "001000101" => rgb <= "001011";
when "001000110" => rgb <= "111111";
when "001001000" => rgb <= "001011";
when "001001001" => rgb <= "001011";
when "001001010" => rgb <= "111111";
when "001001100" => rgb <= "001011";
when "001001101" => rgb <= "001011";
when "001001110" => rgb <= "111111";
when "001010000" => rgb <= "001011";
when "001010001" => rgb <= "001011";
when "001010010" => rgb <= "111111";
when "001011000" => rgb <= "001011";
when "001011001" => rgb <= "001011";
when "001011010" => rgb <= "111111";
when "001100000" => rgb <= "001011";
when "001100001" => rgb <= "001011";
when "001100010" => rgb <= "111111";
when "001100100" => rgb <= "001011";
when "001100101" => rgb <= "001011";
when "001100110" => rgb <= "111111";
when "001101000" => rgb <= "001011";
when "001101001" => rgb <= "001011";
when "001101010" => rgb <= "111111";
when "001101100" => rgb <= "001011";
when "001101101" => rgb <= "001011";
when "001101110" => rgb <= "111111";
when "001110000" => rgb <= "001011";
when "001110001" => rgb <= "001011";
when "001110010" => rgb <= "111111";
when "001111000" => rgb <= "001011";
when "001111001" => rgb <= "001011";
when "001111010" => rgb <= "111111";
when "010000000" => rgb <= "001011";
when "010000001" => rgb <= "001011";
when "010000010" => rgb <= "111111";
when "010000100" => rgb <= "001011";
when "010000101" => rgb <= "001011";
when "010000110" => rgb <= "111111";
when "010001000" => rgb <= "001011";
when "010001001" => rgb <= "001011";
when "010001010" => rgb <= "111111";
when "010001100" => rgb <= "001011";
when "010001101" => rgb <= "001011";
when "010001110" => rgb <= "111111";
when "010010000" => rgb <= "001011";
when "010010001" => rgb <= "001011";
when "010010010" => rgb <= "001011";
when "010010011" => rgb <= "001011";
when "010010100" => rgb <= "001011";
when "010010101" => rgb <= "001011";
when "010010110" => rgb <= "111111";
when "010011000" => rgb <= "001011";
when "010011001" => rgb <= "001011";
when "010011010" => rgb <= "001011";
when "010011011" => rgb <= "001011";
when "010011100" => rgb <= "001011";
when "010011101" => rgb <= "001011";
when "010011110" => rgb <= "111111";
when "010100000" => rgb <= "001011";
when "010100001" => rgb <= "001011";
when "010100010" => rgb <= "111111";
when "010100100" => rgb <= "001011";
when "010100101" => rgb <= "001011";
when "010100110" => rgb <= "111111";
when "010101000" => rgb <= "001011";
when "010101001" => rgb <= "001011";
when "010101010" => rgb <= "111111";
when "010101100" => rgb <= "001011";
when "010101101" => rgb <= "001011";
when "010101110" => rgb <= "111111";
when "010110000" => rgb <= "001011";
when "010110001" => rgb <= "001011";
when "010110010" => rgb <= "001011";
when "010110011" => rgb <= "001011";
when "010110100" => rgb <= "001011";
when "010110101" => rgb <= "001011";
when "010110110" => rgb <= "111111";
when "010111000" => rgb <= "001011";
when "010111001" => rgb <= "001011";
when "010111010" => rgb <= "001011";
when "010111011" => rgb <= "001011";
when "010111100" => rgb <= "001011";
when "010111101" => rgb <= "001011";
when "010111110" => rgb <= "111111";
when "011000000" => rgb <= "001011";
when "011000001" => rgb <= "001011";
when "011000010" => rgb <= "111111";
when "011001000" => rgb <= "001011";
when "011001001" => rgb <= "001011";
when "011001010" => rgb <= "111111";
when "011001100" => rgb <= "001011";
when "011001101" => rgb <= "001011";
when "011001110" => rgb <= "111111";
when "011010100" => rgb <= "001011";
when "011010101" => rgb <= "001011";
when "011010110" => rgb <= "111111";
when "011011100" => rgb <= "001011";
when "011011101" => rgb <= "001011";
when "011011110" => rgb <= "111111";
when "011100000" => rgb <= "001011";
when "011100001" => rgb <= "001011";
when "011100010" => rgb <= "111111";
when "011101000" => rgb <= "001011";
when "011101001" => rgb <= "001011";
when "011101010" => rgb <= "111111";
when "011101100" => rgb <= "001011";
when "011101101" => rgb <= "001011";
when "011101110" => rgb <= "111111";
when "011110100" => rgb <= "001011";
when "011110101" => rgb <= "001011";
when "011110110" => rgb <= "111111";
when "011111100" => rgb <= "001011";
when "011111101" => rgb <= "001011";
when "011111110" => rgb <= "111111";
when "100000000" => rgb <= "001011";
when "100000001" => rgb <= "001011";
when "100000010" => rgb <= "111111";
when "100001000" => rgb <= "001011";
when "100001001" => rgb <= "001011";
when "100001010" => rgb <= "111111";
when "100001100" => rgb <= "001011";
when "100001101" => rgb <= "001011";
when "100001110" => rgb <= "111111";
when "100010000" => rgb <= "001011";
when "100010001" => rgb <= "001011";
when "100010010" => rgb <= "001011";
when "100010011" => rgb <= "001011";
when "100010100" => rgb <= "001011";
when "100010101" => rgb <= "001011";
when "100010110" => rgb <= "111111";
when "100011000" => rgb <= "001011";
when "100011001" => rgb <= "001011";
when "100011010" => rgb <= "001011";
when "100011011" => rgb <= "001011";
when "100011100" => rgb <= "001011";
when "100011101" => rgb <= "001011";
when "100011110" => rgb <= "111111";
when "100100000" => rgb <= "001011";
when "100100001" => rgb <= "001011";
when "100100010" => rgb <= "111111";
when "100101000" => rgb <= "001011";
when "100101001" => rgb <= "001011";
when "100101010" => rgb <= "111111";
when "100101100" => rgb <= "001011";
when "100101101" => rgb <= "001011";
when "100101110" => rgb <= "111111";
when "100110000" => rgb <= "001011";
when "100110001" => rgb <= "001011";
when "100110010" => rgb <= "001011";
when "100110011" => rgb <= "001011";
when "100110100" => rgb <= "001011";
when "100110101" => rgb <= "001011";
when "100110110" => rgb <= "111111";
when "100111000" => rgb <= "001011";
when "100111001" => rgb <= "001011";
when "100111010" => rgb <= "001011";
when "100111011" => rgb <= "001011";
when "100111100" => rgb <= "001011";
when "100111101" => rgb <= "001011";
when "100111110" => rgb <= "111111";
when others => rgb <= "000000";