
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.1.0.43.3

// backanno -o Lab7_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui Lab7_impl_1.udb 
// Netlist created on Mon Nov 20 17:05:40 2023
// Netlist written on Mon Nov 20 17:05:49 2023
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module Top ( data, clk, latch, nesclk, dataout );
  input  data;
  output clk, latch, nesclk;
  output [7:0] dataout;
  wire   \NES0.count_8__N_1[14] , \NES0.count_8__N_1[13] , \NES0.n1239 , 
         \NES0.nescount[5] , \NES0.n782 , \NES0.nescount[4] , clk_c, 
         \NES0.n784 , \NES0.count_8__N_1[12] , \NES0.count_8__N_1[11] , 
         \NES0.n1236 , \NES0.nescount[3] , \NES0.n780 , \NES0.nescount[2] , 
         \NES0.count_8__N_1[10] , \NES0.count_8__N_1[9] , \NES0.n1233 , 
         \NES0.nescount[1] , \NES0.n778 , \NES0.nescount[0] , 
         \NES0.count_8__N_1[8] , \NES0.count_8__N_1[7] , \NES0.n1230 , 
         \NES0.count[8] , \NES0.n776 , \NES0.n10 , \NES0.count_8__N_1[6] , 
         \NES0.count_8__N_1[5] , \NES0.n1227 , \NES0.n11 , \NES0.n774 , 
         \NES0.n12 , \NES0.count_8__N_1[4] , \NES0.count_8__N_1[3] , 
         \NES0.n1224 , \NES0.n13 , \NES0.n772 , \NES0.n14 , 
         \NES0.count_8__N_1[16] , \NES0.count_8__N_1[15] , \NES0.n1242 , 
         \NES0.nescount[7] , \NES0.nescount[6] , \NES0.count_8__N_1[2] , 
         \NES0.count_8__N_1[1] , \NES0.n1221 , \NES0.n15 , \NES0.n770 , 
         \NES0.n16 , \NES0.count_8__N_1[0] , \NES0.n1218 , \NES0.n17 , 
         \clk_pad.vcc , \NES0.inputs[3].sig_001.FeedThruLUT , 
         \NES0.inputs[4].sig_000.FeedThruLUT , \NES0.inputs[3] , 
         \NES0.inputs[4] , nesclk_c, \NES0.inputs[5] , 
         \NES0.inputs[1].sig_003.FeedThruLUT , 
         \NES0.inputs[2].sig_002.FeedThruLUT , \NES0.inputs[1] , 
         \NES0.inputs[2] , \NES0.inputs_0__N_10 , 
         \NES0.inputs[0].sig_004.FeedThruLUT , data_c, \NES0.inputs[0] , 
         \NES0.inputs[5].sig_006.FeedThruLUT , 
         \NES0.inputs[6].sig_005.FeedThruLUT , \NES0.inputs[6] , 
         \NES0.inputs[7] , latch_c, dataout_c_0, dataout_c_2, 
         \NES0.latch_c_N_13 , \NES0.nesclk_c_N_11 , \NES0.nesclk_c_N_12 , 
         dataout_c_6, dataout_c_7, dataout_c_3, dataout_c_1, dataout_c_5, 
         dataout_c_4;

  NES0_SLICE_0 \NES0.SLICE_0 ( .DI1(\NES0.count_8__N_1[14] ), 
    .DI0(\NES0.count_8__N_1[13] ), .D1(\NES0.n1239 ), .C1(\NES0.nescount[5] ), 
    .D0(\NES0.n782 ), .C0(\NES0.nescount[4] ), .CLK(clk_c), .CIN0(\NES0.n782 ), 
    .CIN1(\NES0.n1239 ), .Q0(\NES0.nescount[4] ), .Q1(\NES0.nescount[5] ), 
    .F0(\NES0.count_8__N_1[13] ), .F1(\NES0.count_8__N_1[14] ), 
    .COUT1(\NES0.n784 ), .COUT0(\NES0.n1239 ));
  NES0_SLICE_1 \NES0.SLICE_1 ( .DI1(\NES0.count_8__N_1[12] ), 
    .DI0(\NES0.count_8__N_1[11] ), .D1(\NES0.n1236 ), .C1(\NES0.nescount[3] ), 
    .D0(\NES0.n780 ), .C0(\NES0.nescount[2] ), .CLK(clk_c), .CIN0(\NES0.n780 ), 
    .CIN1(\NES0.n1236 ), .Q0(\NES0.nescount[2] ), .Q1(\NES0.nescount[3] ), 
    .F0(\NES0.count_8__N_1[11] ), .F1(\NES0.count_8__N_1[12] ), 
    .COUT1(\NES0.n782 ), .COUT0(\NES0.n1236 ));
  NES0_SLICE_2 \NES0.SLICE_2 ( .DI1(\NES0.count_8__N_1[10] ), 
    .DI0(\NES0.count_8__N_1[9] ), .D1(\NES0.n1233 ), .C1(\NES0.nescount[1] ), 
    .D0(\NES0.n778 ), .C0(\NES0.nescount[0] ), .CLK(clk_c), .CIN0(\NES0.n778 ), 
    .CIN1(\NES0.n1233 ), .Q0(\NES0.nescount[0] ), .Q1(\NES0.nescount[1] ), 
    .F0(\NES0.count_8__N_1[9] ), .F1(\NES0.count_8__N_1[10] ), 
    .COUT1(\NES0.n780 ), .COUT0(\NES0.n1233 ));
  NES0_SLICE_3 \NES0.SLICE_3 ( .DI1(\NES0.count_8__N_1[8] ), 
    .DI0(\NES0.count_8__N_1[7] ), .D1(\NES0.n1230 ), .C1(\NES0.count[8] ), 
    .D0(\NES0.n776 ), .C0(\NES0.n10 ), .CLK(clk_c), .CIN0(\NES0.n776 ), 
    .CIN1(\NES0.n1230 ), .Q0(\NES0.n10 ), .Q1(\NES0.count[8] ), 
    .F0(\NES0.count_8__N_1[7] ), .F1(\NES0.count_8__N_1[8] ), 
    .COUT1(\NES0.n778 ), .COUT0(\NES0.n1230 ));
  NES0_SLICE_4 \NES0.SLICE_4 ( .DI1(\NES0.count_8__N_1[6] ), 
    .DI0(\NES0.count_8__N_1[5] ), .D1(\NES0.n1227 ), .C1(\NES0.n11 ), 
    .D0(\NES0.n774 ), .C0(\NES0.n12 ), .CLK(clk_c), .CIN0(\NES0.n774 ), 
    .CIN1(\NES0.n1227 ), .Q0(\NES0.n12 ), .Q1(\NES0.n11 ), 
    .F0(\NES0.count_8__N_1[5] ), .F1(\NES0.count_8__N_1[6] ), 
    .COUT1(\NES0.n776 ), .COUT0(\NES0.n1227 ));
  NES0_SLICE_5 \NES0.SLICE_5 ( .DI1(\NES0.count_8__N_1[4] ), 
    .DI0(\NES0.count_8__N_1[3] ), .D1(\NES0.n1224 ), .C1(\NES0.n13 ), 
    .D0(\NES0.n772 ), .C0(\NES0.n14 ), .CLK(clk_c), .CIN0(\NES0.n772 ), 
    .CIN1(\NES0.n1224 ), .Q0(\NES0.n14 ), .Q1(\NES0.n13 ), 
    .F0(\NES0.count_8__N_1[3] ), .F1(\NES0.count_8__N_1[4] ), 
    .COUT1(\NES0.n774 ), .COUT0(\NES0.n1224 ));
  NES0_SLICE_6 \NES0.SLICE_6 ( .DI1(\NES0.count_8__N_1[16] ), 
    .DI0(\NES0.count_8__N_1[15] ), .D1(\NES0.n1242 ), .C1(\NES0.nescount[7] ), 
    .D0(\NES0.n784 ), .C0(\NES0.nescount[6] ), .CLK(clk_c), .CIN0(\NES0.n784 ), 
    .CIN1(\NES0.n1242 ), .Q0(\NES0.nescount[6] ), .Q1(\NES0.nescount[7] ), 
    .F0(\NES0.count_8__N_1[15] ), .F1(\NES0.count_8__N_1[16] ), 
    .COUT0(\NES0.n1242 ));
  NES0_SLICE_7 \NES0.SLICE_7 ( .DI1(\NES0.count_8__N_1[2] ), 
    .DI0(\NES0.count_8__N_1[1] ), .D1(\NES0.n1221 ), .C1(\NES0.n15 ), 
    .D0(\NES0.n770 ), .C0(\NES0.n16 ), .CLK(clk_c), .CIN0(\NES0.n770 ), 
    .CIN1(\NES0.n1221 ), .Q0(\NES0.n16 ), .Q1(\NES0.n15 ), 
    .F0(\NES0.count_8__N_1[1] ), .F1(\NES0.count_8__N_1[2] ), 
    .COUT1(\NES0.n772 ), .COUT0(\NES0.n1221 ));
  NES0_SLICE_8 \NES0.SLICE_8 ( .DI1(\NES0.count_8__N_1[0] ), .D1(\NES0.n1218 ), 
    .C1(\NES0.n17 ), .B1(\clk_pad.vcc ), .CLK(clk_c), .CIN1(\NES0.n1218 ), 
    .Q1(\NES0.n17 ), .F1(\NES0.count_8__N_1[0] ), .COUT1(\NES0.n770 ), 
    .COUT0(\NES0.n1218 ));
  NES0_SLICE_9 \NES0.SLICE_9 ( .DI1(\NES0.inputs[3].sig_001.FeedThruLUT ), 
    .DI0(\NES0.inputs[4].sig_000.FeedThruLUT ), .C1(\NES0.inputs[3] ), 
    .D0(\NES0.inputs[4] ), .CLK(nesclk_c), .Q0(\NES0.inputs[5] ), 
    .Q1(\NES0.inputs[4] ), .F0(\NES0.inputs[4].sig_000.FeedThruLUT ), 
    .F1(\NES0.inputs[3].sig_001.FeedThruLUT ));
  NES0_SLICE_11 \NES0.SLICE_11 ( .DI1(\NES0.inputs[1].sig_003.FeedThruLUT ), 
    .DI0(\NES0.inputs[2].sig_002.FeedThruLUT ), .D1(\NES0.inputs[1] ), 
    .D0(\NES0.inputs[2] ), .CLK(nesclk_c), .Q0(\NES0.inputs[3] ), 
    .Q1(\NES0.inputs[2] ), .F0(\NES0.inputs[2].sig_002.FeedThruLUT ), 
    .F1(\NES0.inputs[1].sig_003.FeedThruLUT ));
  NES0_SLICE_13 \NES0.SLICE_13 ( .DI1(\NES0.inputs_0__N_10 ), 
    .DI0(\NES0.inputs[0].sig_004.FeedThruLUT ), .D1(data_c), 
    .D0(\NES0.inputs[0] ), .CLK(nesclk_c), .Q0(\NES0.inputs[1] ), 
    .Q1(\NES0.inputs[0] ), .F0(\NES0.inputs[0].sig_004.FeedThruLUT ), 
    .F1(\NES0.inputs_0__N_10 ));
  NES0_SLICE_14 \NES0.SLICE_14 ( .DI1(\NES0.inputs[5].sig_006.FeedThruLUT ), 
    .DI0(\NES0.inputs[6].sig_005.FeedThruLUT ), .D1(\NES0.inputs[5] ), 
    .D0(\NES0.inputs[6] ), .CLK(nesclk_c), .Q0(\NES0.inputs[7] ), 
    .Q1(\NES0.inputs[6] ), .F0(\NES0.inputs[6].sig_005.FeedThruLUT ), 
    .F1(\NES0.inputs[5].sig_006.FeedThruLUT ));
  NES0_SLICE_17 \NES0.SLICE_17 ( .D0(latch_c), .C0(dataout_c_0), 
    .B0(\NES0.inputs[0] ), .F0(dataout_c_0));
  NES0_SLICE_18 \NES0.SLICE_18 ( .D1(dataout_c_2), .C1(latch_c), 
    .A1(\NES0.inputs[2] ), .D0(\NES0.nescount[0] ), .C0(\NES0.latch_c_N_13 ), 
    .B0(\NES0.nescount[3] ), .A0(\NES0.nescount[2] ), .F0(latch_c), 
    .F1(dataout_c_2));
  NES0_SLICE_19 \NES0.SLICE_19 ( .D1(\NES0.nescount[1] ), 
    .C1(\NES0.nesclk_c_N_11 ), .D0(\NES0.nescount[4] ), 
    .C0(\NES0.nescount[5] ), .B0(\NES0.nescount[6] ), .A0(\NES0.nescount[7] ), 
    .F0(\NES0.nesclk_c_N_11 ), .F1(\NES0.latch_c_N_13 ));
  NES0_SLICE_20 \NES0.SLICE_20 ( .D1(\NES0.count[8] ), 
    .C1(\NES0.nesclk_c_N_12 ), .B1(\NES0.nesclk_c_N_11 ), 
    .D0(\NES0.nescount[3] ), .C0(\NES0.nescount[1] ), .A0(\NES0.nescount[2] ), 
    .F0(\NES0.nesclk_c_N_12 ), .F1(nesclk_c));
  NES0_SLICE_22 \NES0.SLICE_22 ( .D1(dataout_c_6), .C1(\NES0.inputs[6] ), 
    .B1(latch_c), .D0(\NES0.inputs[7] ), .C0(dataout_c_7), .A0(latch_c), 
    .F0(dataout_c_7), .F1(dataout_c_6));
  NES0_SLICE_25 \NES0.SLICE_25 ( .D1(dataout_c_3), .C1(latch_c), 
    .B1(\NES0.inputs[3] ), .D0(dataout_c_1), .C0(\NES0.inputs[1] ), 
    .B0(latch_c), .F0(dataout_c_1), .F1(dataout_c_3));
  NES0_SLICE_28 \NES0.SLICE_28 ( .D1(\NES0.inputs[5] ), .C1(dataout_c_5), 
    .B1(latch_c), .D0(dataout_c_4), .C0(latch_c), .B0(\NES0.inputs[4] ), 
    .F0(dataout_c_4), .F1(dataout_c_5));
  clk_pad_SLICE_30 \clk_pad.SLICE_30 ( .F0(\clk_pad.vcc ));
  NES0_osc \NES0.osc ( .CLKHFPU(\clk_pad.vcc ), .CLKHFEN(\clk_pad.vcc ), 
    .CLKHF(clk_c));
  data data_I( .PADDI(data_c), .data(data));
  clk clk_I( .PADDO(clk_c), .clk(clk));
  latch latch_I( .PADDO(latch_c), .latch(latch));
  nesclk nesclk_I( .PADDO(nesclk_c), .nesclk(nesclk));
  dataout_0_ \dataout[0]_I ( .PADDO(dataout_c_0), .dataout0(dataout[0]));
  dataout_1_ \dataout[1]_I ( .PADDO(dataout_c_1), .dataout1(dataout[1]));
  dataout_2_ \dataout[2]_I ( .PADDO(dataout_c_2), .dataout2(dataout[2]));
  dataout_3_ \dataout[3]_I ( .PADDO(dataout_c_3), .dataout3(dataout[3]));
  dataout_4_ \dataout[4]_I ( .PADDO(dataout_c_4), .dataout4(dataout[4]));
  dataout_5_ \dataout[5]_I ( .PADDO(dataout_c_5), .dataout5(dataout[5]));
  dataout_6_ \dataout[6]_I ( .PADDO(dataout_c_6), .dataout6(dataout[6]));
  dataout_7_ \dataout[7]_I ( .PADDO(dataout_c_7), .dataout7(dataout[7]));
endmodule

module NES0_SLICE_0 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \NES0/count_52_87_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES0/count_8__I_4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/count_8__I_3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module NES0_SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \NES0/count_52_87_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES0/count_8__I_6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/count_8__I_5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module NES0_SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \NES0/count_52_87_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES0/count_8__I_8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/count_8__I_7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module NES0_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \NES0/count_52_87_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES0/count_52_87__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/count_8__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module NES0_SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \NES0/count_52_87_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES0/count_52_87__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/count_52_87__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module NES0_SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \NES0/count_52_87_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES0/count_52_87__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/count_52_87__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module NES0_SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \NES0/count_52_87_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES0/count_8__I_2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/count_8__I_1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module NES0_SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \NES0/count_52_87_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES0/count_52_87__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/count_52_87__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module NES0_SLICE_8 ( input DI1, D1, C1, B1, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa2 \NES0/count_52_87_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/count_52_87__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module NES0_SLICE_9 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \NES0.SLICE_9_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \NES0.SLICE_9_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \NES0/inputs_3__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/inputs_4__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module NES0_SLICE_11 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 \NES0.SLICE_11_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \NES0.SLICE_11_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \NES0/inputs_1__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/inputs_2__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module NES0_SLICE_13 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 \NES0/i24_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \NES0.SLICE_13_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \NES0/inputs_0__I_9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/inputs_0__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module NES0_SLICE_14 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 \NES0.SLICE_14_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \NES0.SLICE_14_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \NES0/inputs_5__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES0/inputs_6__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module NES0_SLICE_17 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40004 \NES0/dataout_c_0_I_0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module NES0_SLICE_18 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40005 \NES0/dataout_c_2_I_0 ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \NES0/latch_c_I_0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module NES0_SLICE_19 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 \NES0/i2_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \NES0/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module NES0_SLICE_20 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40009 \NES0/nesclk_c_I_0 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \NES0/i361_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x3000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x05FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module NES0_SLICE_22 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40011 \NES0/dataout_c_6_I_0 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \NES0/dataout_c_7_I_0 ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module NES0_SLICE_25 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40013 \NES0/dataout_c_3_I_0 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \NES0/dataout_c_1_I_0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module NES0_SLICE_28 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40015 \NES0/dataout_c_5_I_0 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \NES0/dataout_c_4_I_0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module clk_pad_SLICE_30 ( output F0 );
  wire   GNDI;

  lut40017 \clk_pad.vhi_inst ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module NES0_osc ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B \NES0/osc ( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b00";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module data ( output PADDI, input data );
  wire   GNDI;

  BB_B_B \data_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(data));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (data => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module clk ( input PADDO, output clk );
  wire   VCCI;

  BB_B_B \clk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(clk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => clk) = (0:0:0,0:0:0);
  endspecify

endmodule

module latch ( input PADDO, output latch );
  wire   VCCI;

  BB_B_B \latch_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(latch));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => latch) = (0:0:0,0:0:0);
  endspecify

endmodule

module nesclk ( input PADDO, output nesclk );
  wire   VCCI;

  BB_B_B \nesclk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(nesclk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => nesclk) = (0:0:0,0:0:0);
  endspecify

endmodule

module dataout_0_ ( input PADDO, output dataout0 );
  wire   VCCI;

  BB_B_B \dataout_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(dataout0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => dataout0) = (0:0:0,0:0:0);
  endspecify

endmodule

module dataout_1_ ( input PADDO, output dataout1 );
  wire   VCCI;

  BB_B_B \dataout_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(dataout1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => dataout1) = (0:0:0,0:0:0);
  endspecify

endmodule

module dataout_2_ ( input PADDO, output dataout2 );
  wire   VCCI;

  BB_B_B \dataout_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(dataout2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => dataout2) = (0:0:0,0:0:0);
  endspecify

endmodule

module dataout_3_ ( input PADDO, output dataout3 );
  wire   VCCI;

  BB_B_B \dataout_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(dataout3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => dataout3) = (0:0:0,0:0:0);
  endspecify

endmodule

module dataout_4_ ( input PADDO, output dataout4 );
  wire   VCCI;

  BB_B_B \dataout_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(dataout4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => dataout4) = (0:0:0,0:0:0);
  endspecify

endmodule

module dataout_5_ ( input PADDO, output dataout5 );
  wire   VCCI;

  BB_B_B \dataout_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(dataout5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => dataout5) = (0:0:0,0:0:0);
  endspecify

endmodule

module dataout_6_ ( input PADDO, output dataout6 );
  wire   VCCI;

  BB_B_B \dataout_pad[6].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(dataout6));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => dataout6) = (0:0:0,0:0:0);
  endspecify

endmodule

module dataout_7_ ( input PADDO, output dataout7 );
  wire   VCCI;

  BB_B_B \dataout_pad[7].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(dataout7));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => dataout7) = (0:0:0,0:0:0);
  endspecify

endmodule
