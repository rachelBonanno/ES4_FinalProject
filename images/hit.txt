when "0000000000000" => rgb <= "001011";
when "0000000000001" => rgb <= "001011";
when "0000000000010" => rgb <= "111111";
when "0000000000100" => rgb <= "001011";
when "0000000000101" => rgb <= "001011";
when "0000000000110" => rgb <= "111111";
when "0000000001000" => rgb <= "001011";
when "0000000001001" => rgb <= "001011";
when "0000000001010" => rgb <= "111111";
when "0000000001100" => rgb <= "001011";
when "0000000001101" => rgb <= "001011";
when "0000000001110" => rgb <= "001011";
when "0000000001111" => rgb <= "001011";
when "0000000010000" => rgb <= "001011";
when "0000000010001" => rgb <= "001011";
when "0000000010010" => rgb <= "111111";
when "0000010000000" => rgb <= "001011";
when "0000010000001" => rgb <= "001011";
when "0000010000010" => rgb <= "111111";
when "0000010000100" => rgb <= "001011";
when "0000010000101" => rgb <= "001011";
when "0000010000110" => rgb <= "111111";
when "0000010001000" => rgb <= "001011";
when "0000010001001" => rgb <= "001011";
when "0000010001010" => rgb <= "111111";
when "0000010001100" => rgb <= "001011";
when "0000010001101" => rgb <= "001011";
when "0000010001110" => rgb <= "001011";
when "0000010001111" => rgb <= "001011";
when "0000010010000" => rgb <= "001011";
when "0000010010001" => rgb <= "001011";
when "0000010010010" => rgb <= "111111";
when "0000100000000" => rgb <= "001011";
when "0000100000001" => rgb <= "001011";
when "0000100000010" => rgb <= "111111";
when "0000100000100" => rgb <= "001011";
when "0000100000101" => rgb <= "001011";
when "0000100000110" => rgb <= "111111";
when "0000100001000" => rgb <= "001011";
when "0000100001001" => rgb <= "001011";
when "0000100001010" => rgb <= "111111";
when "0000100001110" => rgb <= "001011";
when "0000100001111" => rgb <= "001011";
when "0000100010000" => rgb <= "111111";
when "0000110000000" => rgb <= "001011";
when "0000110000001" => rgb <= "001011";
when "0000110000010" => rgb <= "111111";
when "0000110000100" => rgb <= "001011";
when "0000110000101" => rgb <= "001011";
when "0000110000110" => rgb <= "111111";
when "0000110001000" => rgb <= "001011";
when "0000110001001" => rgb <= "001011";
when "0000110001010" => rgb <= "111111";
when "0000110001110" => rgb <= "001011";
when "0000110001111" => rgb <= "001011";
when "0000110010000" => rgb <= "111111";
when "0001000000000" => rgb <= "001011";
when "0001000000001" => rgb <= "001011";
when "0001000000010" => rgb <= "001011";
when "0001000000011" => rgb <= "001011";
when "0001000000100" => rgb <= "001011";
when "0001000000101" => rgb <= "001011";
when "0001000000110" => rgb <= "111111";
when "0001000001000" => rgb <= "001011";
when "0001000001001" => rgb <= "001011";
when "0001000001010" => rgb <= "111111";
when "0001000001110" => rgb <= "001011";
when "0001000001111" => rgb <= "001011";
when "0001000010000" => rgb <= "111111";
when "0001010000000" => rgb <= "001011";
when "0001010000001" => rgb <= "001011";
when "0001010000010" => rgb <= "001011";
when "0001010000011" => rgb <= "001011";
when "0001010000100" => rgb <= "001011";
when "0001010000101" => rgb <= "001011";
when "0001010000110" => rgb <= "111111";
when "0001010001000" => rgb <= "001011";
when "0001010001001" => rgb <= "001011";
when "0001010001010" => rgb <= "111111";
when "0001010001110" => rgb <= "001011";
when "0001010001111" => rgb <= "001011";
when "0001010010000" => rgb <= "111111";
when "0001100000000" => rgb <= "001011";
when "0001100000001" => rgb <= "001011";
when "0001100000010" => rgb <= "111111";
when "0001100000100" => rgb <= "001011";
when "0001100000101" => rgb <= "001011";
when "0001100000110" => rgb <= "111111";
when "0001100001000" => rgb <= "001011";
when "0001100001001" => rgb <= "001011";
when "0001100001010" => rgb <= "111111";
when "0001100001110" => rgb <= "001011";
when "0001100001111" => rgb <= "001011";
when "0001100010000" => rgb <= "111111";
when "0001110000000" => rgb <= "001011";
when "0001110000001" => rgb <= "001011";
when "0001110000010" => rgb <= "111111";
when "0001110000100" => rgb <= "001011";
when "0001110000101" => rgb <= "001011";
when "0001110000110" => rgb <= "111111";
when "0001110001000" => rgb <= "001011";
when "0001110001001" => rgb <= "001011";
when "0001110001010" => rgb <= "111111";
when "0001110001110" => rgb <= "001011";
when "0001110001111" => rgb <= "001011";
when "0001110010000" => rgb <= "111111";
when "0010000000000" => rgb <= "001011";
when "0010000000001" => rgb <= "001011";
when "0010000000010" => rgb <= "111111";
when "0010000000100" => rgb <= "001011";
when "0010000000101" => rgb <= "001011";
when "0010000000110" => rgb <= "111111";
when "0010000001000" => rgb <= "001011";
when "0010000001001" => rgb <= "001011";
when "0010000001010" => rgb <= "111111";
when "0010000001110" => rgb <= "001011";
when "0010000001111" => rgb <= "001011";
when "0010000010000" => rgb <= "111111";
when "0010010000000" => rgb <= "001011";
when "0010010000001" => rgb <= "001011";
when "0010010000010" => rgb <= "111111";
when "0010010000100" => rgb <= "001011";
when "0010010000101" => rgb <= "001011";
when "0010010000110" => rgb <= "111111";
when "0010010001000" => rgb <= "001011";
when "0010010001001" => rgb <= "001011";
when "0010010001010" => rgb <= "111111";
when "0010010001110" => rgb <= "001011";
when "0010010001111" => rgb <= "001011";
when "0010010010000" => rgb <= "111111";
when others => rgb <= "000000";
