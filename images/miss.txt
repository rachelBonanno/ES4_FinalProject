when "0000000000000" => rgb <= "001011";
when "0000000000001" => rgb <= "001011";
when "0000000000010" => rgb <= "001011";
when "0000000000011" => rgb <= "001011";
when "0000000000100" => rgb <= "001011";
when "0000000000101" => rgb <= "001011";
when "0000000000110" => rgb <= "001011";
when "0000000000111" => rgb <= "001011";
when "0000000001000" => rgb <= "001011";
when "0000000001001" => rgb <= "001011";
when "0000000001010" => rgb <= "111111";
when "0000000001100" => rgb <= "001011";
when "0000000001101" => rgb <= "001011";
when "0000000001110" => rgb <= "111111";
when "0000000010000" => rgb <= "001011";
when "0000000010001" => rgb <= "001011";
when "0000000010010" => rgb <= "001011";
when "0000000010011" => rgb <= "001011";
when "0000000010100" => rgb <= "001011";
when "0000000010101" => rgb <= "001011";
when "0000000010110" => rgb <= "111111";
when "0000000011000" => rgb <= "001011";
when "0000000011001" => rgb <= "001011";
when "0000000011010" => rgb <= "001011";
when "0000000011011" => rgb <= "001011";
when "0000000011100" => rgb <= "001011";
when "0000000011101" => rgb <= "001011";
when "0000000011110" => rgb <= "111111";
when "0000010000000" => rgb <= "001011";
when "0000010000001" => rgb <= "001011";
when "0000010000010" => rgb <= "001011";
when "0000010000011" => rgb <= "001011";
when "0000010000100" => rgb <= "001011";
when "0000010000101" => rgb <= "001011";
when "0000010000110" => rgb <= "001011";
when "0000010000111" => rgb <= "001011";
when "0000010001000" => rgb <= "001011";
when "0000010001001" => rgb <= "001011";
when "0000010001010" => rgb <= "111111";
when "0000010001100" => rgb <= "001011";
when "0000010001101" => rgb <= "001011";
when "0000010001110" => rgb <= "111111";
when "0000010010000" => rgb <= "001011";
when "0000010010001" => rgb <= "001011";
when "0000010010010" => rgb <= "001011";
when "0000010010011" => rgb <= "001011";
when "0000010010100" => rgb <= "001011";
when "0000010010101" => rgb <= "001011";
when "0000010010110" => rgb <= "111111";
when "0000010011000" => rgb <= "001011";
when "0000010011001" => rgb <= "001011";
when "0000010011010" => rgb <= "001011";
when "0000010011011" => rgb <= "001011";
when "0000010011100" => rgb <= "001011";
when "0000010011101" => rgb <= "001011";
when "0000010011110" => rgb <= "111111";
when "0000100000000" => rgb <= "001011";
when "0000100000001" => rgb <= "001011";
when "0000100000010" => rgb <= "111111";
when "0000100000100" => rgb <= "001011";
when "0000100000101" => rgb <= "001011";
when "0000100000110" => rgb <= "111111";
when "0000100001000" => rgb <= "001011";
when "0000100001001" => rgb <= "001011";
when "0000100001010" => rgb <= "111111";
when "0000100001100" => rgb <= "001011";
when "0000100001101" => rgb <= "001011";
when "0000100001110" => rgb <= "111111";
when "0000100010000" => rgb <= "001011";
when "0000100010001" => rgb <= "001011";
when "0000100010010" => rgb <= "111111";
when "0000100011000" => rgb <= "001011";
when "0000100011001" => rgb <= "001011";
when "0000100011010" => rgb <= "111111";
when "0000110000000" => rgb <= "001011";
when "0000110000001" => rgb <= "001011";
when "0000110000010" => rgb <= "111111";
when "0000110000100" => rgb <= "001011";
when "0000110000101" => rgb <= "001011";
when "0000110000110" => rgb <= "111111";
when "0000110001000" => rgb <= "001011";
when "0000110001001" => rgb <= "001011";
when "0000110001010" => rgb <= "111111";
when "0000110001100" => rgb <= "001011";
when "0000110001101" => rgb <= "001011";
when "0000110001110" => rgb <= "111111";
when "0000110010000" => rgb <= "001011";
when "0000110010001" => rgb <= "001011";
when "0000110010010" => rgb <= "111111";
when "0000110011000" => rgb <= "001011";
when "0000110011001" => rgb <= "001011";
when "0000110011010" => rgb <= "111111";
when "0001000000000" => rgb <= "001011";
when "0001000000001" => rgb <= "001011";
when "0001000000010" => rgb <= "111111";
when "0001000000100" => rgb <= "001011";
when "0001000000101" => rgb <= "001011";
when "0001000000110" => rgb <= "111111";
when "0001000001000" => rgb <= "001011";
when "0001000001001" => rgb <= "001011";
when "0001000001010" => rgb <= "111111";
when "0001000001100" => rgb <= "001011";
when "0001000001101" => rgb <= "001011";
when "0001000001110" => rgb <= "111111";
when "0001000010000" => rgb <= "001011";
when "0001000010001" => rgb <= "001011";
when "0001000010010" => rgb <= "001011";
when "0001000010011" => rgb <= "001011";
when "0001000010100" => rgb <= "001011";
when "0001000010101" => rgb <= "001011";
when "0001000010110" => rgb <= "111111";
when "0001000011000" => rgb <= "001011";
when "0001000011001" => rgb <= "001011";
when "0001000011010" => rgb <= "001011";
when "0001000011011" => rgb <= "001011";
when "0001000011100" => rgb <= "001011";
when "0001000011101" => rgb <= "001011";
when "0001000011110" => rgb <= "111111";
when "0001010000000" => rgb <= "001011";
when "0001010000001" => rgb <= "001011";
when "0001010000010" => rgb <= "111111";
when "0001010000100" => rgb <= "001011";
when "0001010000101" => rgb <= "001011";
when "0001010000110" => rgb <= "111111";
when "0001010001000" => rgb <= "001011";
when "0001010001001" => rgb <= "001011";
when "0001010001010" => rgb <= "111111";
when "0001010001100" => rgb <= "001011";
when "0001010001101" => rgb <= "001011";
when "0001010001110" => rgb <= "111111";
when "0001010010000" => rgb <= "001011";
when "0001010010001" => rgb <= "001011";
when "0001010010010" => rgb <= "001011";
when "0001010010011" => rgb <= "001011";
when "0001010010100" => rgb <= "001011";
when "0001010010101" => rgb <= "001011";
when "0001010010110" => rgb <= "111111";
when "0001010011000" => rgb <= "001011";
when "0001010011001" => rgb <= "001011";
when "0001010011010" => rgb <= "001011";
when "0001010011011" => rgb <= "001011";
when "0001010011100" => rgb <= "001011";
when "0001010011101" => rgb <= "001011";
when "0001010011110" => rgb <= "111111";
when "0001100000000" => rgb <= "001011";
when "0001100000001" => rgb <= "001011";
when "0001100000010" => rgb <= "111111";
when "0001100001000" => rgb <= "001011";
when "0001100001001" => rgb <= "001011";
when "0001100001010" => rgb <= "111111";
when "0001100001100" => rgb <= "001011";
when "0001100001101" => rgb <= "001011";
when "0001100001110" => rgb <= "111111";
when "0001100010100" => rgb <= "001011";
when "0001100010101" => rgb <= "001011";
when "0001100010110" => rgb <= "111111";
when "0001100011100" => rgb <= "001011";
when "0001100011101" => rgb <= "001011";
when "0001100011110" => rgb <= "111111";
when "0001110000000" => rgb <= "001011";
when "0001110000001" => rgb <= "001011";
when "0001110000010" => rgb <= "111111";
when "0001110001000" => rgb <= "001011";
when "0001110001001" => rgb <= "001011";
when "0001110001010" => rgb <= "111111";
when "0001110001100" => rgb <= "001011";
when "0001110001101" => rgb <= "001011";
when "0001110001110" => rgb <= "111111";
when "0001110010100" => rgb <= "001011";
when "0001110010101" => rgb <= "001011";
when "0001110010110" => rgb <= "111111";
when "0001110011100" => rgb <= "001011";
when "0001110011101" => rgb <= "001011";
when "0001110011110" => rgb <= "111111";
when "0010000000000" => rgb <= "001011";
when "0010000000001" => rgb <= "001011";
when "0010000000010" => rgb <= "111111";
when "0010000001000" => rgb <= "001011";
when "0010000001001" => rgb <= "001011";
when "0010000001010" => rgb <= "111111";
when "0010000001100" => rgb <= "001011";
when "0010000001101" => rgb <= "001011";
when "0010000001110" => rgb <= "111111";
when "0010000010000" => rgb <= "001011";
when "0010000010001" => rgb <= "001011";
when "0010000010010" => rgb <= "001011";
when "0010000010011" => rgb <= "001011";
when "0010000010100" => rgb <= "001011";
when "0010000010101" => rgb <= "001011";
when "0010000010110" => rgb <= "111111";
when "0010000011000" => rgb <= "001011";
when "0010000011001" => rgb <= "001011";
when "0010000011010" => rgb <= "001011";
when "0010000011011" => rgb <= "001011";
when "0010000011100" => rgb <= "001011";
when "0010000011101" => rgb <= "001011";
when "0010000011110" => rgb <= "111111";
when "0010010000000" => rgb <= "001011";
when "0010010000001" => rgb <= "001011";
when "0010010000010" => rgb <= "111111";
when "0010010001000" => rgb <= "001011";
when "0010010001001" => rgb <= "001011";
when "0010010001010" => rgb <= "111111";
when "0010010001100" => rgb <= "001011";
when "0010010001101" => rgb <= "001011";
when "0010010001110" => rgb <= "111111";
when "0010010010000" => rgb <= "001011";
when "0010010010001" => rgb <= "001011";
when "0010010010010" => rgb <= "001011";
when "0010010010011" => rgb <= "001011";
when "0010010010100" => rgb <= "001011";
when "0010010010101" => rgb <= "001011";
when "0010010010110" => rgb <= "111111";
when "0010010011000" => rgb <= "001011";
when "0010010011001" => rgb <= "001011";
when "0010010011010" => rgb <= "001011";
when "0010010011011" => rgb <= "001011";
when "0010010011100" => rgb <= "001011";
when "0010010011101" => rgb <= "001011";
when "0010010011110" => rgb <= "111111";
when others => rgb <= "000000";
