when "0000000000010" => rgb <= "001011";
when "0000000000011" => rgb <= "001011";
when "0000000000100" => rgb <= "001011";
when "0000000000101" => rgb <= "001011";
when "0000000000110" => rgb <= "001011";
when "0000000000111" => rgb <= "001011";
when "0000000001000" => rgb <= "111111";
when "0000000001010" => rgb <= "001011";
when "0000000001011" => rgb <= "001011";
when "0000000001100" => rgb <= "001011";
when "0000000001101" => rgb <= "001011";
when "0000000001110" => rgb <= "001011";
when "0000000001111" => rgb <= "001011";
when "0000000010000" => rgb <= "111111";
when "0000000010010" => rgb <= "001011";
when "0000000010011" => rgb <= "001011";
when "0000000010100" => rgb <= "001011";
when "0000000010101" => rgb <= "001011";
when "0000000010110" => rgb <= "001011";
when "0000000010111" => rgb <= "001011";
when "0000000011000" => rgb <= "001011";
when "0000000011001" => rgb <= "001011";
when "0000000011010" => rgb <= "001011";
when "0000000011011" => rgb <= "001011";
when "0000000011100" => rgb <= "111111";
when "0000000011110" => rgb <= "001011";
when "0000000011111" => rgb <= "001011";
when "0000000100000" => rgb <= "001011";
when "0000000100001" => rgb <= "001011";
when "0000000100010" => rgb <= "001011";
when "0000000100011" => rgb <= "001011";
when "0000000100100" => rgb <= "111111";
when "0000010000010" => rgb <= "001011";
when "0000010000011" => rgb <= "001011";
when "0000010000100" => rgb <= "001011";
when "0000010000101" => rgb <= "001011";
when "0000010000110" => rgb <= "001011";
when "0000010000111" => rgb <= "001011";
when "0000010001000" => rgb <= "111111";
when "0000010001010" => rgb <= "001011";
when "0000010001011" => rgb <= "001011";
when "0000010001100" => rgb <= "001011";
when "0000010001101" => rgb <= "001011";
when "0000010001110" => rgb <= "001011";
when "0000010001111" => rgb <= "001011";
when "0000010010000" => rgb <= "111111";
when "0000010010010" => rgb <= "001011";
when "0000010010011" => rgb <= "001011";
when "0000010010100" => rgb <= "001011";
when "0000010010101" => rgb <= "001011";
when "0000010010110" => rgb <= "001011";
when "0000010010111" => rgb <= "001011";
when "0000010011000" => rgb <= "001011";
when "0000010011001" => rgb <= "001011";
when "0000010011010" => rgb <= "001011";
when "0000010011011" => rgb <= "001011";
when "0000010011100" => rgb <= "111111";
when "0000010011110" => rgb <= "001011";
when "0000010011111" => rgb <= "001011";
when "0000010100000" => rgb <= "001011";
when "0000010100001" => rgb <= "001011";
when "0000010100010" => rgb <= "001011";
when "0000010100011" => rgb <= "001011";
when "0000010100100" => rgb <= "111111";
when "0000100000000" => rgb <= "001011";
when "0000100000001" => rgb <= "001011";
when "0000100000010" => rgb <= "111111";
when "0000100001010" => rgb <= "001011";
when "0000100001011" => rgb <= "001011";
when "0000100001100" => rgb <= "111111";
when "0000100001110" => rgb <= "001011";
when "0000100001111" => rgb <= "001011";
when "0000100010000" => rgb <= "111111";
when "0000100010010" => rgb <= "001011";
when "0000100010011" => rgb <= "001011";
when "0000100010100" => rgb <= "111111";
when "0000100010110" => rgb <= "001011";
when "0000100010111" => rgb <= "001011";
when "0000100011000" => rgb <= "111111";
when "0000100011010" => rgb <= "001011";
when "0000100011011" => rgb <= "001011";
when "0000100011100" => rgb <= "111111";
when "0000100011110" => rgb <= "001011";
when "0000100011111" => rgb <= "001011";
when "0000100100000" => rgb <= "111111";
when "0000110000000" => rgb <= "001011";
when "0000110000001" => rgb <= "001011";
when "0000110000010" => rgb <= "111111";
when "0000110001010" => rgb <= "001011";
when "0000110001011" => rgb <= "001011";
when "0000110001100" => rgb <= "111111";
when "0000110001110" => rgb <= "001011";
when "0000110001111" => rgb <= "001011";
when "0000110010000" => rgb <= "111111";
when "0000110010010" => rgb <= "001011";
when "0000110010011" => rgb <= "001011";
when "0000110010100" => rgb <= "111111";
when "0000110010110" => rgb <= "001011";
when "0000110010111" => rgb <= "001011";
when "0000110011000" => rgb <= "111111";
when "0000110011010" => rgb <= "001011";
when "0000110011011" => rgb <= "001011";
when "0000110011100" => rgb <= "111111";
when "0000110011110" => rgb <= "001011";
when "0000110011111" => rgb <= "001011";
when "0000110100000" => rgb <= "111111";
when "0001000000000" => rgb <= "001011";
when "0001000000001" => rgb <= "001011";
when "0001000000010" => rgb <= "111111";
when "0001000000100" => rgb <= "001011";
when "0001000000101" => rgb <= "001011";
when "0001000000110" => rgb <= "001011";
when "0001000000111" => rgb <= "001011";
when "0001000001000" => rgb <= "111111";
when "0001000001010" => rgb <= "001011";
when "0001000001011" => rgb <= "001011";
when "0001000001100" => rgb <= "001011";
when "0001000001101" => rgb <= "001011";
when "0001000001110" => rgb <= "001011";
when "0001000001111" => rgb <= "001011";
when "0001000010000" => rgb <= "111111";
when "0001000010010" => rgb <= "001011";
when "0001000010011" => rgb <= "001011";
when "0001000010100" => rgb <= "111111";
when "0001000010110" => rgb <= "001011";
when "0001000010111" => rgb <= "001011";
when "0001000011000" => rgb <= "111111";
when "0001000011010" => rgb <= "001011";
when "0001000011011" => rgb <= "001011";
when "0001000011100" => rgb <= "111111";
when "0001000011110" => rgb <= "001011";
when "0001000011111" => rgb <= "001011";
when "0001000100000" => rgb <= "001011";
when "0001000100001" => rgb <= "001011";
when "0001000100010" => rgb <= "111111";
when "0001010000000" => rgb <= "001011";
when "0001010000001" => rgb <= "001011";
when "0001010000010" => rgb <= "111111";
when "0001010000100" => rgb <= "001011";
when "0001010000101" => rgb <= "001011";
when "0001010000110" => rgb <= "001011";
when "0001010000111" => rgb <= "001011";
when "0001010001000" => rgb <= "111111";
when "0001010001010" => rgb <= "001011";
when "0001010001011" => rgb <= "001011";
when "0001010001100" => rgb <= "001011";
when "0001010001101" => rgb <= "001011";
when "0001010001110" => rgb <= "001011";
when "0001010001111" => rgb <= "001011";
when "0001010010000" => rgb <= "111111";
when "0001010010010" => rgb <= "001011";
when "0001010010011" => rgb <= "001011";
when "0001010010100" => rgb <= "111111";
when "0001010010110" => rgb <= "001011";
when "0001010010111" => rgb <= "001011";
when "0001010011000" => rgb <= "111111";
when "0001010011010" => rgb <= "001011";
when "0001010011011" => rgb <= "001011";
when "0001010011100" => rgb <= "111111";
when "0001010011110" => rgb <= "001011";
when "0001010011111" => rgb <= "001011";
when "0001010100000" => rgb <= "001011";
when "0001010100001" => rgb <= "001011";
when "0001010100010" => rgb <= "111111";
when "0001100000000" => rgb <= "001011";
when "0001100000001" => rgb <= "001011";
when "0001100000010" => rgb <= "111111";
when "0001100000110" => rgb <= "001011";
when "0001100000111" => rgb <= "001011";
when "0001100001000" => rgb <= "111111";
when "0001100001010" => rgb <= "001011";
when "0001100001011" => rgb <= "001011";
when "0001100001100" => rgb <= "111111";
when "0001100001110" => rgb <= "001011";
when "0001100001111" => rgb <= "001011";
when "0001100010000" => rgb <= "111111";
when "0001100010010" => rgb <= "001011";
when "0001100010011" => rgb <= "001011";
when "0001100010100" => rgb <= "111111";
when "0001100011010" => rgb <= "001011";
when "0001100011011" => rgb <= "001011";
when "0001100011100" => rgb <= "111111";
when "0001100011110" => rgb <= "001011";
when "0001100011111" => rgb <= "001011";
when "0001100100000" => rgb <= "111111";
when "0001110000000" => rgb <= "001011";
when "0001110000001" => rgb <= "001011";
when "0001110000010" => rgb <= "111111";
when "0001110000110" => rgb <= "001011";
when "0001110000111" => rgb <= "001011";
when "0001110001000" => rgb <= "111111";
when "0001110001010" => rgb <= "001011";
when "0001110001011" => rgb <= "001011";
when "0001110001100" => rgb <= "111111";
when "0001110001110" => rgb <= "001011";
when "0001110001111" => rgb <= "001011";
when "0001110010000" => rgb <= "111111";
when "0001110010010" => rgb <= "001011";
when "0001110010011" => rgb <= "001011";
when "0001110010100" => rgb <= "111111";
when "0001110011010" => rgb <= "001011";
when "0001110011011" => rgb <= "001011";
when "0001110011100" => rgb <= "111111";
when "0001110011110" => rgb <= "001011";
when "0001110011111" => rgb <= "001011";
when "0001110100000" => rgb <= "111111";
when "0010000000010" => rgb <= "001011";
when "0010000000011" => rgb <= "001011";
when "0010000000100" => rgb <= "001011";
when "0010000000101" => rgb <= "001011";
when "0010000000110" => rgb <= "001011";
when "0010000000111" => rgb <= "001011";
when "0010000001000" => rgb <= "111111";
when "0010000001010" => rgb <= "001011";
when "0010000001011" => rgb <= "001011";
when "0010000001100" => rgb <= "111111";
when "0010000001110" => rgb <= "001011";
when "0010000001111" => rgb <= "001011";
when "0010000010000" => rgb <= "111111";
when "0010000010010" => rgb <= "001011";
when "0010000010011" => rgb <= "001011";
when "0010000010100" => rgb <= "111111";
when "0010000011010" => rgb <= "001011";
when "0010000011011" => rgb <= "001011";
when "0010000011100" => rgb <= "111111";
when "0010000011110" => rgb <= "001011";
when "0010000011111" => rgb <= "001011";
when "0010000100000" => rgb <= "001011";
when "0010000100001" => rgb <= "001011";
when "0010000100010" => rgb <= "001011";
when "0010000100011" => rgb <= "001011";
when "0010000100100" => rgb <= "111111";
when "0010010000010" => rgb <= "001011";
when "0010010000011" => rgb <= "001011";
when "0010010000100" => rgb <= "001011";
when "0010010000101" => rgb <= "001011";
when "0010010000110" => rgb <= "001011";
when "0010010000111" => rgb <= "001011";
when "0010010001000" => rgb <= "111111";
when "0010010001010" => rgb <= "001011";
when "0010010001011" => rgb <= "001011";
when "0010010001100" => rgb <= "111111";
when "0010010001110" => rgb <= "001011";
when "0010010001111" => rgb <= "001011";
when "0010010010000" => rgb <= "111111";
when "0010010010010" => rgb <= "001011";
when "0010010010011" => rgb <= "001011";
when "0010010010100" => rgb <= "111111";
when "0010010011010" => rgb <= "001011";
when "0010010011011" => rgb <= "001011";
when "0010010011100" => rgb <= "111111";
when "0010010011110" => rgb <= "001011";
when "0010010011111" => rgb <= "001011";
when "0010010100000" => rgb <= "001011";
when "0010010100001" => rgb <= "001011";
when "0010010100010" => rgb <= "001011";
when "0010010100011" => rgb <= "001011";
when "0010010100100" => rgb <= "111111";
when "0011100000010" => rgb <= "001011";
when "0011100000011" => rgb <= "001011";
when "0011100000100" => rgb <= "001011";
when "0011100000101" => rgb <= "001011";
when "0011100000110" => rgb <= "001011";
when "0011100000111" => rgb <= "001011";
when "0011100001000" => rgb <= "111111";
when "0011100001010" => rgb <= "001011";
when "0011100001011" => rgb <= "001011";
when "0011100001100" => rgb <= "111111";
when "0011100010000" => rgb <= "001011";
when "0011100010001" => rgb <= "001011";
when "0011100010010" => rgb <= "111111";
when "0011100010100" => rgb <= "001011";
when "0011100010101" => rgb <= "001011";
when "0011100010110" => rgb <= "001011";
when "0011100010111" => rgb <= "001011";
when "0011100011000" => rgb <= "001011";
when "0011100011001" => rgb <= "001011";
when "0011100011010" => rgb <= "111111";
when "0011100011100" => rgb <= "001011";
when "0011100011101" => rgb <= "001011";
when "0011100011110" => rgb <= "001011";
when "0011100011111" => rgb <= "001011";
when "0011100100000" => rgb <= "001011";
when "0011100100001" => rgb <= "001011";
when "0011100100010" => rgb <= "111111";
when "0011110000010" => rgb <= "001011";
when "0011110000011" => rgb <= "001011";
when "0011110000100" => rgb <= "001011";
when "0011110000101" => rgb <= "001011";
when "0011110000110" => rgb <= "001011";
when "0011110000111" => rgb <= "001011";
when "0011110001000" => rgb <= "111111";
when "0011110001010" => rgb <= "001011";
when "0011110001011" => rgb <= "001011";
when "0011110001100" => rgb <= "111111";
when "0011110010000" => rgb <= "001011";
when "0011110010001" => rgb <= "001011";
when "0011110010010" => rgb <= "111111";
when "0011110010100" => rgb <= "001011";
when "0011110010101" => rgb <= "001011";
when "0011110010110" => rgb <= "001011";
when "0011110010111" => rgb <= "001011";
when "0011110011000" => rgb <= "001011";
when "0011110011001" => rgb <= "001011";
when "0011110011010" => rgb <= "111111";
when "0011110011100" => rgb <= "001011";
when "0011110011101" => rgb <= "001011";
when "0011110011110" => rgb <= "001011";
when "0011110011111" => rgb <= "001011";
when "0011110100000" => rgb <= "001011";
when "0011110100001" => rgb <= "001011";
when "0011110100010" => rgb <= "111111";
when "0100000000010" => rgb <= "001011";
when "0100000000011" => rgb <= "001011";
when "0100000000100" => rgb <= "111111";
when "0100000000110" => rgb <= "001011";
when "0100000000111" => rgb <= "001011";
when "0100000001000" => rgb <= "111111";
when "0100000001010" => rgb <= "001011";
when "0100000001011" => rgb <= "001011";
when "0100000001100" => rgb <= "111111";
when "0100000010000" => rgb <= "001011";
when "0100000010001" => rgb <= "001011";
when "0100000010010" => rgb <= "111111";
when "0100000010100" => rgb <= "001011";
when "0100000010101" => rgb <= "001011";
when "0100000010110" => rgb <= "111111";
when "0100000011100" => rgb <= "001011";
when "0100000011101" => rgb <= "001011";
when "0100000011110" => rgb <= "111111";
when "0100000100001" => rgb <= "001011";
when "0100000100010" => rgb <= "001011";
when "0100000100011" => rgb <= "111111";
when "0100010000010" => rgb <= "001011";
when "0100010000011" => rgb <= "001011";
when "0100010000100" => rgb <= "111111";
when "0100010000110" => rgb <= "001011";
when "0100010000111" => rgb <= "001011";
when "0100010001000" => rgb <= "111111";
when "0100010001010" => rgb <= "001011";
when "0100010001011" => rgb <= "001011";
when "0100010001100" => rgb <= "111111";
when "0100010010000" => rgb <= "001011";
when "0100010010001" => rgb <= "001011";
when "0100010010010" => rgb <= "111111";
when "0100010010100" => rgb <= "001011";
when "0100010010101" => rgb <= "001011";
when "0100010010110" => rgb <= "111111";
when "0100010011100" => rgb <= "001011";
when "0100010011101" => rgb <= "001011";
when "0100010011110" => rgb <= "111111";
when "0100010100001" => rgb <= "001011";
when "0100010100010" => rgb <= "001011";
when "0100010100011" => rgb <= "111111";
when "0100100000010" => rgb <= "001011";
when "0100100000011" => rgb <= "001011";
when "0100100000100" => rgb <= "111111";
when "0100100000110" => rgb <= "001011";
when "0100100000111" => rgb <= "001011";
when "0100100001000" => rgb <= "111111";
when "0100100001010" => rgb <= "001011";
when "0100100001011" => rgb <= "001011";
when "0100100001100" => rgb <= "111111";
when "0100100010000" => rgb <= "001011";
when "0100100010001" => rgb <= "001011";
when "0100100010010" => rgb <= "111111";
when "0100100010100" => rgb <= "001011";
when "0100100010101" => rgb <= "001011";
when "0100100010110" => rgb <= "001011";
when "0100100010111" => rgb <= "001011";
when "0100100011000" => rgb <= "111111";
when "0100100011100" => rgb <= "001011";
when "0100100011101" => rgb <= "001011";
when "0100100011110" => rgb <= "001011";
when "0100100011111" => rgb <= "111111";
when "0100100100000" => rgb <= "001011";
when "0100100100001" => rgb <= "001011";
when "0100100100010" => rgb <= "111111";
when "0100110000010" => rgb <= "001011";
when "0100110000011" => rgb <= "001011";
when "0100110000100" => rgb <= "111111";
when "0100110000110" => rgb <= "001011";
when "0100110000111" => rgb <= "001011";
when "0100110001000" => rgb <= "111111";
when "0100110001010" => rgb <= "001011";
when "0100110001011" => rgb <= "001011";
when "0100110001100" => rgb <= "111111";
when "0100110010000" => rgb <= "001011";
when "0100110010001" => rgb <= "001011";
when "0100110010010" => rgb <= "111111";
when "0100110010100" => rgb <= "001011";
when "0100110010101" => rgb <= "001011";
when "0100110010110" => rgb <= "001011";
when "0100110010111" => rgb <= "001011";
when "0100110011000" => rgb <= "111111";
when "0100110011100" => rgb <= "001011";
when "0100110011101" => rgb <= "001011";
when "0100110011110" => rgb <= "001011";
when "0100110011111" => rgb <= "001011";
when "0100110100000" => rgb <= "001011";
when "0100110100001" => rgb <= "001011";
when "0100110100010" => rgb <= "111111";
when "0101000000010" => rgb <= "001011";
when "0101000000011" => rgb <= "001011";
when "0101000000100" => rgb <= "111111";
when "0101000000110" => rgb <= "001011";
when "0101000000111" => rgb <= "001011";
when "0101000001000" => rgb <= "111111";
when "0101000001011" => rgb <= "001011";
when "0101000001100" => rgb <= "001011";
when "0101000001101" => rgb <= "111111";
when "0101000001111" => rgb <= "001011";
when "0101000010000" => rgb <= "001011";
when "0101000010001" => rgb <= "111111";
when "0101000010100" => rgb <= "001011";
when "0101000010101" => rgb <= "001011";
when "0101000010110" => rgb <= "111111";
when "0101000011100" => rgb <= "001011";
when "0101000011101" => rgb <= "001011";
when "0101000011110" => rgb <= "001011";
when "0101000011111" => rgb <= "001011";
when "0101000100000" => rgb <= "001011";
when "0101000100001" => rgb <= "111111";
when "0101010000010" => rgb <= "001011";
when "0101010000011" => rgb <= "001011";
when "0101010000100" => rgb <= "111111";
when "0101010000110" => rgb <= "001011";
when "0101010000111" => rgb <= "001011";
when "0101010001000" => rgb <= "111111";
when "0101010001011" => rgb <= "001011";
when "0101010001100" => rgb <= "001011";
when "0101010001101" => rgb <= "111111";
when "0101010001111" => rgb <= "001011";
when "0101010010000" => rgb <= "001011";
when "0101010010001" => rgb <= "111111";
when "0101010010100" => rgb <= "001011";
when "0101010010101" => rgb <= "001011";
when "0101010010110" => rgb <= "111111";
when "0101010011100" => rgb <= "001011";
when "0101010011101" => rgb <= "001011";
when "0101010011110" => rgb <= "111111";
when "0101010011111" => rgb <= "001011";
when "0101010100000" => rgb <= "001011";
when "0101010100001" => rgb <= "001011";
when "0101010100010" => rgb <= "111111";
when "0101100000010" => rgb <= "001011";
when "0101100000011" => rgb <= "001011";
when "0101100000100" => rgb <= "001011";
when "0101100000101" => rgb <= "001011";
when "0101100000110" => rgb <= "001011";
when "0101100000111" => rgb <= "001011";
when "0101100001000" => rgb <= "111111";
when "0101100001100" => rgb <= "001011";
when "0101100001101" => rgb <= "001011";
when "0101100001110" => rgb <= "001011";
when "0101100001111" => rgb <= "001011";
when "0101100010000" => rgb <= "111111";
when "0101100010100" => rgb <= "001011";
when "0101100010101" => rgb <= "001011";
when "0101100010110" => rgb <= "001011";
when "0101100010111" => rgb <= "001011";
when "0101100011000" => rgb <= "001011";
when "0101100011001" => rgb <= "001011";
when "0101100011010" => rgb <= "111111";
when "0101100011100" => rgb <= "001011";
when "0101100011101" => rgb <= "001011";
when "0101100011110" => rgb <= "111111";
when "0101100100000" => rgb <= "001011";
when "0101100100001" => rgb <= "001011";
when "0101100100010" => rgb <= "001011";
when "0101100100011" => rgb <= "111111";
when "0101110000010" => rgb <= "001011";
when "0101110000011" => rgb <= "001011";
when "0101110000100" => rgb <= "001011";
when "0101110000101" => rgb <= "001011";
when "0101110000110" => rgb <= "001011";
when "0101110000111" => rgb <= "001011";
when "0101110001000" => rgb <= "111111";
when "0101110001100" => rgb <= "001011";
when "0101110001101" => rgb <= "001011";
when "0101110001110" => rgb <= "001011";
when "0101110001111" => rgb <= "001011";
when "0101110010000" => rgb <= "111111";
when "0101110010100" => rgb <= "001011";
when "0101110010101" => rgb <= "001011";
when "0101110010110" => rgb <= "001011";
when "0101110010111" => rgb <= "001011";
when "0101110011000" => rgb <= "001011";
when "0101110011001" => rgb <= "001011";
when "0101110011010" => rgb <= "111111";
when "0101110011100" => rgb <= "001011";
when "0101110011101" => rgb <= "001011";
when "0101110011110" => rgb <= "111111";
when "0101110100001" => rgb <= "001011";
when "0101110100010" => rgb <= "001011";
when "0101110100011" => rgb <= "111111";
when others => rgb <= "000000";
